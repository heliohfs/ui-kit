{"version":3,"sources":["/Users/feliperodrigues/Documents/Repositories/GitHub/ui-kit-master/src/EditText/EditText.js","/Users/feliperodrigues/Documents/Repositories/GitHub/ui-kit-master/src/EditText/EditText.mdx"],"names":["useStyle","makeStyles","theme","root","width","height","editorError","borderColor","borderWidth","borderStyle","EditText","_ref","onChange","initialValue","uploadURL","disabled","error","name","language","showMenu","uploadFunc","hasImage","skinUrl","toolbarDrawer","variant","classes","plugins","push","react_default","a","createElement","className","ts","init","join","toolbar_drawer","toolbar","simple","advanced","paste_data_images","images_upload_url","automatic_uploads","skin_url","menubar","images_upload_handler","branding","textareaName","FormHelperText","defaultProps","undefined","layoutProps","MDXLayout","MDXContent","components","props","Object","objectWithoutProperties","index_es","assign","mdxType","id","index_esm","of","parentName","src_EditText_EditText","isMDXComponent"],"mappings":"w7BAcMA,EAAWC,YAAW,SAAAC,GAAK,MAAK,CACpCC,KAAM,CACJC,MAAO,OACPC,OAAQ,QAEVC,YAAa,CACXC,YAAa,MACbC,YAAa,MACbC,YAAa,YAIJC,EAAW,SAAAC,GAclB,IAbJC,EAaID,EAbJC,SACAC,EAYIF,EAZJE,aACAC,EAWIH,EAXJG,UACAC,EAUIJ,EAVJI,SACAC,EASIL,EATJK,MACAC,EAQIN,EARJM,KACAC,EAOIP,EAPJO,SACAC,EAMIR,EANJQ,SACAC,EAKIT,EALJS,WACAC,EAIIV,EAJJU,SACAC,EAGIX,EAHJW,QACAC,EAEIZ,EAFJY,cACAC,EACIb,EADJa,QAEMC,EAAUzB,IAEV0B,EAAU,CAAC,OAAQ,OAAQ,QAAS,SAEtCL,GACFK,EAAQC,KAAK,SAyBf,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQtB,MACtByB,EAAAC,EAAAC,cAAA,OAAKC,UAAWf,EAAQS,EAAQnB,YAAc,MAC5CsB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEjB,SAAUA,EACVF,aAAcA,EACdoB,KAAM,CACJP,QAASA,EAAQQ,KAAK,KACtBC,eAAgBZ,EAChBa,QA/BM,CACdC,OAAQ,CACN,QACA,YACA,sCACA,cACA,gDACA,SAEFC,SAAU,CACR,iBACA,YACA,sCACA,4DACA,gDACA,oBACA,kBACA,iBACA,SAauBd,GAASU,KAAK,KAC/BK,kBAAmBlB,EACnBmB,kBAAmB1B,EACnB2B,mBAAmB,EACnBC,SAAUpB,GAAW,IACrBJ,SAAuB,OAAbA,EAAoB,QAAUA,EACxCyB,QAASxB,EACTyB,sBAAuBxB,EACvByB,UAAU,GAEZjC,SAAUA,EACVkC,aAAc7B,KAGjBD,GAASY,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAgB/B,OAAK,GAAEA,iLAKvCN,EAASsC,aAAe,CACtBpC,SAAU,KACVC,aAAc,GACdC,eAAWmC,EACXlC,UAAU,EACVC,MAAO,GACPE,SAAU,KACVC,UAAU,EACVC,gBAAY6B,EACZ5B,UAAU,EACVC,QAAS,GACTC,cAAe,GACfC,QAAS,UAkBId,2QC1Hf,IAKMwC,EAAc,GAGdC,EAAY,UACH,SAASC,EAATzC,GAGZ,IAFD0C,EAEC1C,EAFD0C,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAA5C,EAAA,gBACD,OAAO4C,OAAAE,EAAA,EAAAF,CAACJ,EAADI,OAAAG,OAAA,GAAeR,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAE5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,YADR,YAGAL,OAAAE,EAAA,EAAAF,CAACM,EAAA,EAAD,CAAOC,GAAIpD,EAAUiD,QAAQ,UAC7BJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,eADR,eAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,sGADR,8CAEkDL,OAAAE,EAAA,EAAAF,CAAA,cAAYQ,WAAW,MAAvB,uEAClDR,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,6GADR,2BAE+BL,OAAAE,EAAA,EAAAF,CAAA,cAAYQ,WAAW,MAAvB,UAF/B,sFAGAR,OAAAE,EAAA,EAAAF,CAACS,EAAD,CAAUL,QAAQ,6LAItBP,EAAWa,gBAAiB","file":"static/js/src-edit-text-edit-text.4b20c70e.js","sourcesContent":["import React from 'react';\nimport 'tinymce/tinymce';\nimport 'tinymce/themes/silver/theme';\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/link';\nimport 'tinymce/plugins/code';\nimport 'tinymce/plugins/image';\nimport 'tinymce/plugins/lists';\nimport 'tinymce-i18n/langs/pt_BR';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { makeStyles } from '@material-ui/styles';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport PropTypes from 'prop-types';\n\nconst useStyle = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n  },\n  editorError: {\n    borderColor: 'red',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n  },\n}));\n\nexport const EditText = ({\n  onChange,\n  initialValue,\n  uploadURL,\n  disabled,\n  error,\n  name,\n  language,\n  showMenu,\n  uploadFunc,\n  hasImage,\n  skinUrl,\n  toolbarDrawer,\n  variant,\n}) => {\n  const classes = useStyle();\n\n  const plugins = ['link', 'code', 'paste', 'lists'];\n\n  if (hasImage) {\n    plugins.push('image');\n  }\n\n  const toolbar = {\n    simple: [\n      'paste',\n      'undo redo',\n      'fontselect fontsizeselect forecolor',\n      'bold italic',\n      'alignleft aligncenter alignright alignjustify',\n      'image',\n    ],\n    advanced: [\n      'copy cut paste',\n      'undo redo',\n      'fontselect fontsizeselect forecolor',\n      'bold italic underline strikethrough subscript superscript',\n      'alignleft aligncenter alignright alignjustify',\n      'link unlink image',\n      'bullist numlist',\n      'outdent indent',\n      'code',\n    ],\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={error ? classes.editorError : null}>\n        <Editor\n          disabled={disabled}\n          initialValue={initialValue}\n          init={{\n            plugins: plugins.join(' '),\n            toolbar_drawer: toolbarDrawer,\n            toolbar: toolbar[variant].join('|'),\n            paste_data_images: hasImage,\n            images_upload_url: uploadURL,\n            automatic_uploads: true,\n            skin_url: skinUrl || '/',\n            language: language === 'pt' ? 'pt_BR' : language,\n            menubar: showMenu,\n            images_upload_handler: uploadFunc,\n            branding: false,\n          }}\n          onChange={onChange}\n          textareaName={name}\n        />\n      </div>\n      {error && <FormHelperText error>{error}</FormHelperText>}\n    </div>\n  );\n};\n\nEditText.defaultProps = {\n  onChange: null,\n  initialValue: '',\n  uploadURL: undefined,\n  disabled: false,\n  error: '',\n  language: 'pt',\n  showMenu: false,\n  uploadFunc: undefined,\n  hasImage: false,\n  skinUrl: '',\n  toolbarDrawer: '',\n  variant: 'simple',\n};\n\nEditText.propTypes = {\n  onChange: PropTypes.func,\n  initialValue: PropTypes.string,\n  uploadURL: PropTypes.string,\n  disabled: PropTypes.bool,\n  error: PropTypes.string,\n  language: PropTypes.oneOf(['pt', 'en', 'es']),\n  showMenu: PropTypes.bool,\n  uploadFunc: PropTypes.func,\n  hasImage: PropTypes.bool,\n  skinUrl: PropTypes.string,\n  toolbarDrawer: PropTypes.oneOf(['', 'floating', 'sliding']),\n  variant: PropTypes.oneOf(['simple', 'advanced']),\n};\n\nexport default EditText;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport EditText from './EditText';\nimport { Playground, Props } from 'docz';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"edittext\"\n    }}>{`EditText`}</h1>\n    <Props of={EditText} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <h3 {...{\n      \"id\": \"the-component-requires-that-the-files-from-httpsgithubcomtinymcetinymce-disttreemasterskinsuioxide\"\n    }}>{`The component requires that the files from `}<inlineCode parentName=\"h3\">{`https://github.com/tinymce/tinymce-dist/tree/master/skins/ui/oxide`}</inlineCode></h3>\n    <h3 {...{\n      \"id\": \"should-be-copied-to-the-public-folder-and-passed-as-a-prop-to-skinurl-start-as--meaning-the-public-folder\"\n    }}>{`should be copied to the `}<inlineCode parentName=\"h3\">{`public`}</inlineCode>{` folder and passed as a prop to 'skinUrl' (start as '/' meaning the public folder)`}</h3>\n    <EditText mdxType=\"EditText\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}