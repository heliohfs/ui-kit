{"version":3,"sources":["/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/Alerts/ConfirmationAlert.js","/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/Buttons/Button.js","/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/Notifications/StyledSnackbarContent.js","/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/Notifications/Snackbar.js","/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/UploadFile/helper.js","/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/UploadFile/Uploader.js","/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/UploadFile/UpFile.js","/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/UploadFile/PreviewList.js","/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/UploadFile/FormUploader.js","/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/UploadFile/TesteUploader.js","/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/UploadFile/FormUploader.mdx","/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/colors.js"],"names":["__webpack_require__","d","__webpack_exports__","ConfirmationAlert","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","_colors__WEBPACK_IMPORTED_MODULE_6__","_ref","show","proceed","dismiss","cancel","children","text","cancelButtonText","confirmButtonText","a","createElement","open","onClose","id","onClick","style","color","defaultGrey","autoFocus","defaultProps","buttonStyle","buttonSpan","& > :first-child","marginRight","spacing","unit","disabled","backgroundColor","buttonColorSuccess","defaultGreen","&:hover","buttonColorWarning","defaultOrange","buttonColorError","defaultRed","buttonClassNameDefinition","classes","margin","variant","_ref2","Object","_dados_ext4_TecSinapse_Proj_react_prs_ui_kit_node_modules_docz_core_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","marginTop","useStyles","makeStyles","Button","_ref3","submitting","fullWidth","type","_ref3$size","size","className","props","_dados_ext4_TecSinapse_Proj_react_prs_ui_kit_node_modules_docz_core_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classdef","react__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","assign","label","classNames","indexOf","undefined","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","theme","successSnack","errorSnack","infoSnack","warningSnack","iconSnack","fontSize","iconVariantSnack","opacity","messageSnack","display","alignItems","disabledSnack","StyledSnackbarContent","message","Icon","react_default","SnackbarContent_default","concat","aria-describedby","action","IconButton_default","key","aria-label","Close_default","Snackbar","index_es","anchorOrigin","vertical","horizontal","autoHideDuration","isImage","fileName","suffix","substr","toLowerCase","convertBytes","filesize","Math","round","useStyle","root","width","height","position","justifyContent","flexDirection","dropzone","textAlign","icon","alignSelf","textDiv","flexBasis","button","divider","marginBottom","buttonDiv","buttonIcon","iconColor","hidden","visibility","Uploader","forwardRef","ref","value","acceptedFormat","filesLimit","maxFileSize","onAccept","onReject","silent","_ref$messages","messages","title","buttonLabel","subtitle","maximumFileLimitMessage","maximumFileNumberMessage","filenameFailedMessage","filetypeNotSupportedMessage","sizeLimitErrorMessage","undefinedErrorMessage","_useState","useState","msg","_useState2","slicedToArray","snackbar","setSnackBar","_useDropzone","useDropzone","noClick","noKeyboard","accept","join","maxSize","onDrop","acceptedFiles","length","keys","filter","i","completed","map","file","onDropRejected","rejectedFiles","errorFile","forEach","rejectedFile","messageFile","name","includes","push","getRootProps","getInputProps","rootProps","event","stopPropagation","onKeyDown","keyCode","useImperativeHandle","Fragment","CloudUpload_default","colorPrimary","core_index_es","Divider_default","prevSnack","limit","item","borderRadius","minHeight","paddingBottom","paddingTop","itemError","primary","maxHeight","maxWidth","flex","flexWrap","img","thumbnail","loading","barCompleted","barError","barError2","errorDiv","UpFile","uid","filename","setShowAlert","setSelectedUID","data","fileUploadedSucessfullyMessage","fileErroedMessage","isCompleted","setIsCompleted","_useState3","_useState4","isError","setIsError","alt","src","ListItem_default","ListItemIcon_default","ListItemText_default","noWrap","marginLeft","ErrorOutlineOutlined_default","padding","Clear_default","LinearProgress_default","bar1Determinate","determinate","scrollHiddenBar","overflowY","scrollbarWidth","-ms-overflow-style","&::-webkit-scrollbar","circle","list","unavailableColor","PreviewList","onDelete","headerLabel","noFileTopLabel","noFileBottomLabel","showAlert","selectedUID","_useState5","_useState6","fileRemovedMessage","Icon_default","path","mdiFileUpload","List_default","rootmobile","uploader","border","minWidth","overwride","uploadermobile","preview","previewmobile","FormUploader","matches","useMediaQuery","useTheme","breakpoints","down","mobile","defineProperty","TesteUploader","_ref$silent","files","setFiles","setOpen","newFiles","copyFiles","objectSpread","reader","FileReader","uniqid","onload","target","result","dummyError","timer","setInterval","prevFiles","random","clearInterval","DummyUploader","readAsDataURL","fileObj","onDeleteFiles","fileUID","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","layoutProps","MDXLayout","MDXContent","components","objectWithoutProperties","mdxType","index_esm","of","__position","__code","__scope","this","Playground","Props","__codesandbox","isMDXComponent","defaultGreenDarker","defaultRedDarker","defaultOrangeDarker","_material_ui_core_colors__WEBPACK_IMPORTED_MODULE_0__","grey","defaultGreyLight","defaultGreyLight2","defaultGreyLight200","defaultGreyDisabled"],"mappings":"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","file":"static/js/src-upload-file-form-uploader.a5ea0980.js","sourcesContent":["import React from 'react';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { DialogContent } from '@material-ui/core';\nimport { defaultGrey } from '../colors';\n\nexport const ConfirmationAlert = ({\n  show,\n  proceed,\n  dismiss,\n  cancel,\n  children,\n  text,\n  cancelButtonText,\n  confirmButtonText,\n}) => (\n  <Dialog open={show} onClose={dismiss}>\n    <DialogTitle id=\"alert-dialog-title\"> {text} </DialogTitle>\n    <DialogContent>{children}</DialogContent>\n    <DialogActions>\n      <Button onClick={() => cancel()} style={{ color: defaultGrey }}>\n        {cancelButtonText}\n      </Button>\n      <Button\n        onClick={() => proceed()}\n        style={{ color: defaultGrey }}\n        autoFocus\n      >\n        {confirmButtonText}\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\nConfirmationAlert.defaultProps = {\n  text: 'Você tem certeza?',\n  cancelButtonText: 'Cancelar',\n  confirmButtonText: 'Confirmar',\n};\nConfirmationAlert.propTypes = {\n  show: PropTypes.bool.isRequired,\n  proceed: PropTypes.func.isRequired,\n  dismiss: PropTypes.func.isRequired,\n  cancel: PropTypes.func.isRequired,\n  text: PropTypes.object,\n  cancelButtonText: PropTypes.string,\n  confirmButtonText: PropTypes.string,\n};\n","import { Button as MaterialButton, CircularProgress } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  defaultGreen,\n  defaultGrey,\n  defaultOrange,\n  defaultRed,\n} from '../colors';\n\nexport const buttonStyle = ({ spacing }) => ({\n  buttonSpan: {\n    '& > :first-child': {\n      marginRight: spacing.unit * 0.5,\n    },\n  },\n  disabled: {\n    backgroundColor: defaultGrey,\n    color: 'white',\n  },\n  buttonColorSuccess: {\n    backgroundColor: defaultGreen,\n    color: 'white',\n    '&:hover': {\n      backgroundColor: defaultGreen,\n    },\n  },\n  buttonColorWarning: {\n    backgroundColor: defaultOrange,\n    color: 'white',\n    '&:hover': {\n      backgroundColor: defaultOrange,\n    },\n  },\n  buttonColorError: {\n    backgroundColor: defaultRed,\n    color: 'white',\n    '&:hover': {\n      backgroundColor: defaultRed,\n    },\n  },\n});\nexport function buttonClassNameDefinition(classes, disabled, margin, variant) {\n  return {\n    [classes.disabled]: disabled,\n    [classes.marginTop]: margin,\n    [classes.buttonColorSuccess]: variant === 'success',\n    [classes.buttonColorWarning]: variant === 'warning',\n    [classes.buttonColorError]: variant === 'error',\n  };\n}\nconst useStyles = makeStyles(buttonStyle);\n\nexport const Button = ({\n  submitting,\n  fullWidth,\n  disabled,\n  variant,\n  margin,\n  type,\n  size = 'medium',\n  children,\n  className,\n  ...props\n}) => {\n  const classes = useStyles();\n  const classdef = buttonClassNameDefinition(\n    classes,\n    disabled,\n    margin,\n    variant\n  );\n  return (\n    <MaterialButton\n      type={type}\n      variant=\"contained\"\n      classes={{ label: classes.buttonSpan }}\n      className={classNames(className, classdef)}\n      color={\n        ['primary', 'secondary'].indexOf(variant) > -1 ? variant : undefined\n      }\n      fullWidth={fullWidth}\n      disabled={disabled || submitting}\n      size={size}\n      {...props}\n    >\n      {submitting && <CircularProgress size={20} />} {children}\n    </MaterialButton>\n  );\n};\n\nButton.defaultProps = {\n  submitting: false,\n  margin: false,\n  disabled: false,\n  fullWidth: false,\n  variant: 'success',\n  type: 'submit',\n  size: 'medium',\n};\nButton.propTypes = {\n  variant: PropTypes.oneOf([\n    'success',\n    'warning',\n    'error',\n    'primary',\n    'secondary',\n  ]),\n  submitting: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  margin: PropTypes.bool,\n  disabled: PropTypes.bool,\n  type: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n};\n\nexport default Button;\n","import IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  defaultGreen,\n  defaultGrey,\n  defaultOrange,\n  defaultRed,\n} from '../colors';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles = makeStyles(theme => ({\n  successSnack: {\n    backgroundColor: defaultGreen,\n    color: 'white',\n  },\n  errorSnack: {\n    backgroundColor: defaultRed,\n    color: 'white',\n  },\n  infoSnack: {\n    backgroundColor: defaultGrey,\n    color: 'white',\n  },\n  warningSnack: {\n    backgroundColor: defaultOrange,\n    color: 'white',\n  },\n  iconSnack: {\n    fontSize: 20,\n  },\n  iconVariantSnack: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  messageSnack: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  disabledSnack: {},\n}));\n\nexport function StyledSnackbarContent(props) {\n  const { className, message, onClose, variant } = props;\n  const classes = useStyles();\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[`${variant}Snack`], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.messageSnack}>\n          <Icon\n            className={classNames(classes.iconSnack, classes.iconVariantSnack)}\n          />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.iconSnack} />\n        </IconButton>,\n      ]}\n    />\n  );\n}\n\nStyledSnackbarContent.defaultProps = {\n  message: '',\n  onClose: () => {},\n};\nStyledSnackbarContent.propTypes = {\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error']).isRequired,\n};\n","import { Snackbar as MaterialSnackbar } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyledSnackbarContent } from './StyledSnackbarContent';\n\nexport function Snackbar({ show, onClose, variant, children }) {\n  return (\n    <MaterialSnackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      open={show}\n      autoHideDuration={6000}\n      onClose={onClose}\n    >\n      <StyledSnackbarContent\n        onClose={onClose}\n        variant={variant}\n        message={children}\n      />\n    </MaterialSnackbar>\n  );\n}\n\nSnackbar.defaultProps = {\n  onClose: () => {},\n};\nSnackbar.propTypes = {\n  onClose: PropTypes.func,\n  show: PropTypes.bool.isRequired,\n  variant: PropTypes.oneOf(['success', 'warning', 'error']).isRequired,\n};\nexport default Snackbar;\n","export function isImage(fileName) {\n  const suffix = fileName.substr(fileName.indexOf('.') + 1).toLowerCase();\n  if (\n    suffix === 'jpg' ||\n    suffix === 'jpeg' ||\n    suffix === 'bmp' ||\n    suffix === 'png'\n  ) {\n    return true;\n  }\n  return false;\n}\nexport function convertBytes(filesize) {\n  let size = '';\n  if (filesize >= 1000000) {\n    size = `${Math.round(filesize / 1000000)}Mb`;\n  } else if (filesize >= 1000) {\n    size = `${Math.round(filesize / 1000)}Kb`;\n  } else {\n    size = `${Math.round(filesize)}bytes`;\n  }\n  return size;\n}\n","import React, { useState, useImperativeHandle, forwardRef } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport PropTypes from 'prop-types';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport { Snackbar } from '../Notifications/Snackbar';\nimport { convertBytes } from './helper';\nimport { Button } from '../Buttons/Button';\n\nconst useStyle = makeStyles({\n  root: {\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  dropzone: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    textAlign: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  icon: {\n    alignSelf: 'center',\n    height: '80%',\n    width: '80%',\n  },\n  textDiv: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    flexBasis: '40%',\n  },\n  button: {\n    alignSelf: 'center',\n    width: '70%',\n  },\n  divider: {\n    width: '25%',\n    alignSelf: 'center',\n    marginBottom: '4%',\n    marginTop: '1%',\n  },\n  buttonDiv: {\n    alignSelf: 'center',\n    display: 'flex',\n    textAlign: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  buttonIcon: {\n    marginRight: '5%',\n  },\n  text: {\n    marginBottom: '1%',\n  },\n  iconColor: {\n    color: '#61616152',\n  },\n  hidden: {\n    visibility: 'hidden',\n  },\n});\n\nexport const Uploader = forwardRef(\n  (\n    {\n      value,\n      acceptedFormat,\n      filesLimit,\n      maxFileSize,\n      onAccept,\n      onReject,\n      silent,\n      messages: {\n        title,\n        buttonLabel,\n        subtitle,\n        maximumFileLimitMessage,\n        maximumFileNumberMessage,\n        filenameFailedMessage,\n        filetypeNotSupportedMessage,\n        sizeLimitErrorMessage,\n        undefinedErrorMessage,\n      },\n    },\n    ref\n  ) => {\n    const [snackbar, setSnackBar] = useState({\n      show: false,\n      variant: 'error',\n      msg: '',\n    });\n    const classes = useStyle();\n\n    const { getRootProps, getInputProps, open } = useDropzone({\n      noClick: true,\n      noKeyboard: true,\n      accept: acceptedFormat.join(','),\n      maxSize: maxFileSize,\n      onDrop: acceptedFiles => {\n        // The limit only counts uploading file (no error and no completed)\n        if (\n          acceptedFiles.length +\n            Object.keys(value).filter(\n              i => !value[i].error && !(value[i].completed >= 100)\n            ).length <=\n          filesLimit\n        ) {\n          if (onAccept) {\n            onAccept(acceptedFiles);\n          }\n        } else {\n          setSnackBar({\n            show: true,\n            variant: 'error',\n            msg: maximumFileLimitMessage(filesLimit),\n          });\n          if (onReject) {\n            onReject(\n              acceptedFiles.map(file => ({\n                file,\n                error: maximumFileNumberMessage,\n              }))\n            );\n          }\n        }\n      },\n      onDropRejected: rejectedFiles => {\n        let message = '';\n        const errorFile = [];\n        rejectedFiles.forEach(rejectedFile => {\n          let messageFile = '';\n          message += filenameFailedMessage(rejectedFile.name);\n          if (!acceptedFormat.includes(rejectedFile.type)) {\n            messageFile += filetypeNotSupportedMessage;\n          }\n          if (rejectedFile.size > maxFileSize) {\n            messageFile += sizeLimitErrorMessage(convertBytes(maxFileSize));\n          }\n          if (messageFile === '') {\n            messageFile = undefinedErrorMessage;\n          }\n          errorFile.push({ file: rejectedFile, error: messageFile });\n        });\n        setSnackBar({\n          show: true,\n          variant: 'error',\n          msg: message,\n        });\n        if (onReject && errorFile.length > 0) {\n          onReject(errorFile);\n        }\n      },\n    });\n\n    const rootProps = getRootProps({\n      // Disable click and keydown behavior\n      onClick: event => event.stopPropagation(),\n      onKeyDown: event => {\n        if (event.keyCode === 32 || event.keyCode === 13) {\n          event.stopPropagation();\n        }\n      },\n    });\n\n    useImperativeHandle(ref, () => ({\n      open,\n    }));\n\n    return (\n      <React.Fragment>\n        {silent ? (\n          <div ref={ref}>\n            <input {...getInputProps()} className={classes.hidden} />\n          </div>\n        ) : (\n          <div {...rootProps} className={classes.root}>\n            <input {...getInputProps()} />\n            <div className={classes.dropzone}>\n              <div className={classes.textDiv} ref={ref}>\n                <CloudUploadIcon\n                  fontSize=\"large\"\n                  color=\"primary\"\n                  className={classes.icon}\n                  classes={{ colorPrimary: classes.iconColor }}\n                />\n                <Typography variant=\"h5\" color=\"textSecondary\">\n                  {title}\n                </Typography>\n              </div>\n\n              <div className={classes.divider}>\n                <Divider variant=\"middle\" />\n              </div>\n\n              <div className={classes.buttonDiv}>\n                <Typography\n                  variant=\"body2\"\n                  className={classes.text}\n                  color=\"textSecondary\"\n                >\n                  {subtitle}\n                </Typography>\n                <Button\n                  variant=\"secondary\"\n                  onClick={open}\n                  className={classes.button}\n                >\n                  <CloudUploadIcon className={classes.buttonIcon} />\n                  {buttonLabel}\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n        <Snackbar\n          show={snackbar.show}\n          variant={snackbar.variant}\n          onClose={() =>\n            setSnackBar(prevSnack => ({\n              show: false,\n              variant: prevSnack.variant,\n              msg: prevSnack.msg,\n            }))\n          }\n        >\n          {snackbar.msg}\n        </Snackbar>\n      </React.Fragment>\n    );\n  }\n);\n\nUploader.defaultProps = {\n  value: {},\n  acceptedFormat: ['image/*', 'video/*', 'application/*'],\n  filesLimit: 3,\n  maxFileSize: 3000000,\n  onAccept: null,\n  onReject: null,\n  messages: {\n    maximumFileLimitMessage: limit =>\n      `Maximum allowed number of files exceeded. Only ${limit} allowed`,\n    maximumFileNumberMessage: 'Maximum allowed number of files',\n    filenameFailedMessage: name => `${name} failed. `,\n    filetypeNotSupportedMessage: 'File type not supported. ',\n    sizeLimitErrorMessage: size => `Size limit ${size}.`,\n    undefinedErrorMessage: 'Undefined error',\n    title: 'Drag and drop a file',\n    buttonLabel: 'Upload Files',\n    subtitle: 'or click on the button',\n  },\n\n  silent: false,\n};\n\nUploader.propTypes = {\n  acceptedFormat: PropTypes.array,\n  filesLimit: PropTypes.number,\n  maxFileSize: PropTypes.number,\n  onAccept: PropTypes.func,\n  onReject: PropTypes.func,\n  silent: PropTypes.bool,\n  value: PropTypes.shape({\n    uid: PropTypes.number,\n    file: PropTypes.object,\n    completed: PropTypes.number,\n    uprate: PropTypes.number,\n    error: PropTypes.string,\n  }),\n  messages: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    buttonLabel: PropTypes.string,\n    filetypeNotSupportedMessage: PropTypes.string,\n    undefinedErrorMessage: PropTypes.string,\n    maximumFileLimitMessage: PropTypes.func,\n    filenameFailedMessage: PropTypes.func,\n    sizeLimitErrorMessage: PropTypes.func,\n  }),\n};\n","import React, { useState } from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Typography } from '@material-ui/core';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport ErrorOutlineOutlined from '@material-ui/icons/ErrorOutlineOutlined';\nimport Clear from '@material-ui/icons/Clear';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/styles';\n// import AttachFileIcon from '@material-ui/icons/AttachFile';\nimport { isImage } from './helper';\n\nconst useStyle = makeStyles({\n  item: {\n    backgroundColor: '#f7f7f7',\n    borderRadius: '5px 5px 0px 0px ',\n    minHeight: '55px',\n    marginTop: '3%',\n    paddingBottom: '5px',\n    paddingTop: '5px',\n    // border: '2px dashed blue',\n  },\n  itemError: {\n    backgroundColor: '#ffb1b1',\n    borderRadius: '5px 5px 0px 0px ',\n    minHeight: '55px',\n    marginTop: '3%',\n    paddingBottom: '5px',\n    paddingTop: '5px',\n  },\n  primary: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    // border: '2px dashed blue',\n    width: '100%',\n    maxHeight: '10%',\n  },\n  info: {\n    maxWidth: '100%',\n    // border: '2px dashed red',\n    display: 'flex',\n    alignItems: 'baseline',\n    flex: '2 1 auto',\n    flexWrap: 'wrap',\n  },\n  img: {\n    maxWidth: '40px',\n    maxHeight: '40px',\n    // border: '2px dashed green',\n    display: 'block',\n  },\n  thumbnail: {\n    // border: '2px dashed green',\n    width: '40px',\n    height: '40px',\n    display: 'flex',\n    justifyContent: 'center',\n    marginRight: '0px',\n  },\n  loading: {\n    borderRadius: '0px 0px 5px 5px ',\n  },\n  barCompleted: {\n    backgroundColor: '#4caf50',\n  },\n  barError: {\n    backgroundColor: '#e6433f',\n  },\n  barError2: {\n    backgroundColor: '#ffb1b1',\n  },\n  errorDiv: {\n    display: 'flex',\n    alignItems: 'center',\n    // border: '2px dashed blue',\n    width: '100%',\n  },\n  name: {\n    // border: '2px dashed green',\n    maxWidth: '60%',\n  },\n});\n\nexport function UpFile({\n  uid,\n  filename,\n  completed,\n  filesize,\n  setShowAlert,\n  setSelectedUID,\n  data,\n  error,\n  setSnackBar,\n  messages: { fileUploadedSucessfullyMessage, fileErroedMessage },\n}) {\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const classes = useStyle();\n\n  if (completed >= 100 && !isCompleted) {\n    setSnackBar({\n      show: true,\n      variant: 'success',\n      msg: fileUploadedSucessfullyMessage(filename),\n    });\n    setIsCompleted(true);\n  }\n\n  if (error && !isError) {\n    setSnackBar({\n      show: true,\n      variant: 'error',\n      msg: fileErroedMessage(filename, error),\n    });\n    setIsError(true);\n  }\n\n  const img =\n    isImage(filename) && data ? (\n      <img alt=\"presentation\" src={data} className={classes.img} />\n    ) : null;\n\n  return (\n    <React.Fragment>\n      <ListItem key={uid} className={error ? classes.itemError : classes.item}>\n        {img ? (\n          <ListItemIcon className={classes.thumbnail}>{img}</ListItemIcon>\n        ) : null}\n        <ListItemText\n          primary={\n            <div className={classes.primary}>\n              <div className={classes.info}>\n                <Typography variant=\"subtitle2\" noWrap className={classes.name}>\n                  {filename}\n                </Typography>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body2\"\n                  style={{ marginLeft: '2%' }}\n                >\n                  ({filesize})\n                </Typography>\n                {error ? (\n                  <div className={classes.errorDiv}>\n                    <ErrorOutlineOutlined fontSize=\"small\" />\n                    <Typography\n                      variant=\"caption\"\n                      style={{ marginLeft: '2%' }}\n                      noWrap\n                    >\n                      {error}\n                    </Typography>\n                  </div>\n                ) : null}\n              </div>\n            </div>\n          }\n        />\n        <IconButton\n          onClick={() => {\n            setShowAlert(true);\n            setSelectedUID(uid);\n          }}\n          style={{ padding: '0px' }}\n        >\n          <Clear fontSize=\"small\" />\n        </IconButton>\n      </ListItem>\n      {\n        <LinearProgress\n          variant=\"determinate\"\n          value={completed}\n          className={classes.loading}\n          classes={\n            error\n              ? {\n                  bar1Determinate: classes.barError,\n                  determinate: classes.barError2,\n                }\n              : {\n                  bar1Determinate:\n                    completed >= 100 ? classes.barCompleted : null,\n                }\n          }\n        />\n      }\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport List from '@material-ui/core/List';\nimport { Typography } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport { mdiFileUpload } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport { makeStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport { convertBytes } from './helper';\nimport { ConfirmationAlert } from '../Alerts/ConfirmationAlert';\nimport { UpFile } from './UpFile';\nimport { Snackbar } from '../Notifications/Snackbar';\n\nconst useStyle = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    height: '100%',\n    width: '100%',\n  },\n  scrollHiddenBar: {\n    maxHeight: 300,\n    overflowY: 'scroll',\n    scrollbarWidth: 'none',\n    '-ms-overflow-style': 'none',\n    '&::-webkit-scrollbar': {\n      width: 0,\n      height: 0,\n    },\n  },\n  circle: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    backgroundColor: '#f7f7f7',\n    height: '200px',\n    width: '200px',\n    borderRadius: '50%',\n  },\n  icon: {\n    alignItems: 'center',\n  },\n  text: {\n    textAlign: 'center',\n  },\n  list: {},\n  unavailableColor: {\n    color: '#cacacb',\n  },\n  iconColor: {\n    backgroundColor: '#f7f7f7',\n  },\n});\n\nexport function PreviewList({\n  value,\n  onDelete,\n  headerLabel,\n  noFileTopLabel,\n  noFileBottomLabel,\n  messages,\n}) {\n  const [showAlert, setShowAlert] = useState(false);\n  const [selectedUID, setSelectedUID] = useState('');\n  const [snackbar, setSnackBar] = useState({\n    show: false,\n    variant: 'error',\n    msg: '',\n  });\n  const { fileRemovedMessage } = messages;\n  const classes = useStyle();\n\n  return (\n    <React.Fragment>\n      <ConfirmationAlert\n        show={showAlert}\n        proceed={() => {\n          setSnackBar({\n            show: true,\n            variant: 'warning',\n            msg: fileRemovedMessage,\n          });\n          setShowAlert(false);\n          onDelete(selectedUID);\n        }}\n        cancel={() => {\n          setShowAlert(false);\n          setSelectedUID('');\n        }}\n        dismiss={() => {\n          setShowAlert(false);\n          setSelectedUID('');\n        }}\n      />\n      <Snackbar\n        show={snackbar.show}\n        variant={snackbar.variant}\n        onClose={() =>\n          setSnackBar(prevSnack => ({\n            show: false,\n            variant: prevSnack.variant,\n            msg: prevSnack.msg,\n          }))\n        }\n      >\n        {snackbar.msg}\n      </Snackbar>\n\n      {Object.keys(value).length <= 0 ? (\n        <div className={classes.root}>\n          <div className={classes.circle}>\n            <Icon path={mdiFileUpload} size={2} className={classes.iconColor} />\n\n            <Typography\n              variant=\"h5\"\n              color=\"primary\"\n              className={classes.text}\n              classes={{ colorPrimary: classes.unavailableColor }}\n            >\n              {noFileTopLabel}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"primary\"\n              className={classes.text}\n              classes={{ colorPrimary: classes.unavailableColor }}\n            >\n              {noFileBottomLabel}\n            </Typography>\n          </div>\n        </div>\n      ) : (\n        <React.Fragment>\n          {headerLabel && (\n            <div>\n              <Typography variant=\"h6\">{headerLabel}</Typography>\n              <Divider style={{ marginTop: '2%' }} />\n            </div>\n          )}\n          <div className={classes.scrollHiddenBar}>\n            <List className={classes.list}>\n              {Object.keys(value).map((uid, i) => (\n                <UpFile\n                  uid={uid}\n                  filename={value[uid].file.name}\n                  completed={value[uid].completed}\n                  filesize={convertBytes(value[uid].file.size)}\n                  divider={Object.keys(value).length !== i + 1}\n                  setShowAlert={setShowAlert}\n                  setSelectedUID={setSelectedUID}\n                  data={value[uid].data}\n                  error={value[uid].error}\n                  setSnackBar={setSnackBar}\n                  messages={messages}\n                  key={uid}\n                />\n              ))}\n            </List>\n          </div>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nPreviewList.defaultProps = {\n  value: {},\n  onDelete: () => {},\n  headerLabel: null,\n  noFileTopLabel: 'Upload Files',\n  noFileBottomLabel: 'Appear Here',\n  messages: {\n    fileRemovedMessage: 'File removed from upload list',\n    fileUploadedSucessfullyMessage: filename =>\n      `${filename} uploaded successfully`,\n    fileErroedMessage: (filename, error) => `${filename} error: ${error}`,\n  },\n};\n\nPreviewList.propTypes = {\n  value: PropTypes.shape({\n    uid: PropTypes.number,\n    file: PropTypes.object,\n    completed: PropTypes.number,\n    uprate: PropTypes.number,\n    error: PropTypes.string,\n  }),\n  onDelete: PropTypes.func,\n  headerLabel: PropTypes.string,\n  noFileBottomLabel: PropTypes.string,\n  noFileTopLabel: PropTypes.string,\n  messages: PropTypes.shape({\n    fileRemovedMessage: PropTypes.string,\n    fileUploadedSucessfullyMessage: PropTypes.func,\n    fileErroedMessage: PropTypes.func,\n  }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { unstable_useMediaQuery as useMediaQuery } from '@material-ui/core/useMediaQuery';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { Uploader } from './Uploader';\nimport { PreviewList } from './PreviewList';\n\nconst useStyle = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n  },\n  rootmobile: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n  },\n  uploader: {\n    borderRadius: '2px',\n    border: '1px dashed #80808070',\n    backgroundColor: '#f7f7f7',\n    minWidth: '50%',\n    overwride: 'hidden',\n  },\n  uploadermobile: {\n    width: '100%',\n  },\n  preview: {\n    marginLeft: '3%',\n    width: '47%',\n    display: 'flex',\n    flexDirection: 'column',\n    overwride: 'hidden',\n  },\n  previewmobile: {\n    marginLeft: '0px',\n    width: '100%',\n  },\n}));\n\nexport function FormUploader({\n  value,\n  acceptedFormat,\n  filesLimit,\n  maxFileSize,\n  title,\n  buttonLabel,\n  subtitle,\n  onAccept,\n  onReject,\n  onDelete,\n  variant,\n  headerLabel,\n  noFileTopLabel,\n  noFileBottomLabel,\n}) {\n  const classes = useStyle();\n\n  const matches = useMediaQuery(useTheme().breakpoints.down('xs'));\n\n  let mobile = false;\n  if (variant === 'auto') {\n    if (matches) {\n      mobile = true;\n    }\n  } else if (variant === 'mobile') mobile = true;\n\n  return (\n    <div\n      className={classNames(classes.root, {\n        [classes.rootmobile]: mobile,\n      })}\n    >\n      <div\n        className={classNames(classes.uploader, {\n          [classes.uploadermobile]: mobile,\n        })}\n      >\n        <Uploader\n          value={value}\n          acceptedFormat={acceptedFormat}\n          filesLimit={filesLimit}\n          maxFileSize={maxFileSize}\n          title={title}\n          buttonLabel={buttonLabel}\n          onAccept={onAccept}\n          onReject={onReject}\n          subtitle={subtitle}\n        />\n      </div>\n\n      <div\n        className={classNames(classes.preview, {\n          [classes.previewmobile]: mobile,\n        })}\n      >\n        <PreviewList\n          value={value}\n          onDelete={onDelete}\n          headerLabel={headerLabel}\n          noFileBottomLabel={noFileBottomLabel}\n          noFileTopLabel={noFileTopLabel}\n        />\n      </div>\n    </div>\n  );\n}\n\nFormUploader.defaultProps = {\n  value: {},\n  acceptedFormat: ['image/*', 'video/*', 'application/*'],\n  filesLimit: 3,\n  maxFileSize: 3000000,\n  title: 'Drag and drop a file',\n  buttonLabel: 'Upload Files',\n  subtitle: 'or click on the button',\n  onAccept: null,\n  onReject: null,\n  onDelete: null,\n  variant: 'auto',\n  headerLabel: 'Uploading Files',\n  noFileTopLabel: 'Upload Files',\n  noFileBottomLabel: 'Appear Here',\n};\n\nFormUploader.propTypes = {\n  acceptedFormat: PropTypes.array,\n  filesLimit: PropTypes.number,\n  maxFileSize: PropTypes.number,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  buttonLabel: PropTypes.string,\n  value: PropTypes.shape({\n    uid: PropTypes.number,\n    file: PropTypes.object,\n    completed: PropTypes.number,\n    uprate: PropTypes.number,\n    error: PropTypes.string,\n  }),\n  onAccept: PropTypes.func,\n  onReject: PropTypes.func,\n  onDelete: PropTypes.func,\n  variant: PropTypes.oneOf(['auto', 'mobile', 'web']),\n  headerLabel: PropTypes.string,\n  noFileBottomLabel: PropTypes.string,\n  noFileTopLabel: PropTypes.string,\n};\n","import React, { useState, forwardRef } from 'react';\nimport uniqid from 'uniqid';\nimport { setInterval, clearInterval } from 'timers';\nimport Dialog from '@material-ui/core/Dialog';\n// import DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Uploader } from './Uploader';\nimport { PreviewList } from './PreviewList';\nimport { FormUploader } from './FormUploader';\n\nexport const TesteUploader = forwardRef(\n  ({ type, variant, silent = false }, ref) => {\n    const [files, setFiles] = useState({});\n    const [open, setOpen] = useState(false);\n\n    function DummyUploader(uid, dummyError) {\n      const timer = setInterval(\n        () =>\n          setFiles(prevFiles => {\n            const copyFiles = { ...prevFiles };\n\n            if (copyFiles[uid] === null) return prevFiles;\n\n            copyFiles[uid] = {\n              data: copyFiles[uid].data,\n              file: copyFiles[uid].file,\n\n              // Only update completed when there isn't an error, otherwise it\n              // will continue to load the bar in an error state though.\n              completed:\n                copyFiles[uid].completed > 50 && dummyError\n                  ? copyFiles[uid].completed\n                  : copyFiles[uid].completed + Math.random() * 10,\n\n              uploader: timer,\n\n              // Verify if this dummy example should enter in an error state\n              error:\n                copyFiles[uid].completed > 50 && dummyError\n                  ? 'Dummy error'\n                  : null,\n            };\n\n            if (copyFiles[uid].completed >= 100) {\n              clearInterval(timer);\n            }\n\n            return copyFiles;\n          }),\n        800\n      );\n    }\n\n    const onAccept = newFiles => {\n      setOpen(true);\n      const copyFiles = { ...files };\n      newFiles.forEach(file => {\n        const reader = new FileReader();\n        const uid = uniqid();\n\n        // Set state after reading async the files\n        reader.onload = event => {\n          copyFiles[uid] = {\n            file,\n            data: event.target.result,\n            completed: 0,\n            uploader: null,\n            error: null,\n          };\n          setFiles(copyFiles);\n\n          // Dummy uploader update the file upload values and fake a\n          // a error when it has added more than 2 files\n          DummyUploader(uid, Object.keys(copyFiles).length > 2);\n        };\n        reader.readAsDataURL(file);\n      });\n    };\n\n    const onReject = newFiles => {\n      setOpen(true);\n      const copyFiles = { ...files };\n      newFiles.forEach(fileObj => {\n        const uid = uniqid();\n\n        copyFiles[uid] = {\n          file: fileObj.file,\n          data: null,\n          completed: 0,\n          uploader: null,\n          error: fileObj.error,\n        };\n        setFiles(copyFiles);\n\n        // Dummy uploader update the file upload values and fake a\n        // a error when it has added more than 2 files\n        // if (!fileObj.error) DummyUploader(uid, Object.keys(copyFiles).length > 2);\n      });\n    };\n\n    const onDeleteFiles = fileUID => {\n      const copyFiles = { ...files };\n\n      // Note: Before update the state (excluding),\n      // this example should stop the upload process (dummy here)\n      clearInterval(copyFiles[fileUID].uploader);\n\n      // Update state\n      delete copyFiles[fileUID];\n      setFiles(copyFiles);\n    };\n\n    return (\n      <React.Fragment>\n        {type !== 'form' ? (\n          <React.Fragment>\n            <Uploader\n              value={files}\n              onAccept={onAccept}\n              onReject={onReject}\n              filesLimit={3}\n              silent={silent}\n              ref={ref}\n            />\n            <Dialog\n              onClose={() => setOpen(false)}\n              open={open}\n              aria-labelledby=\"simple-dialog-title\"\n            >\n              <DialogTitle id=\"form-dialog-title\">Uploading Files</DialogTitle>\n              <DialogContent>\n                <PreviewList value={files} onDelete={onDeleteFiles} />\n              </DialogContent>\n            </Dialog>\n          </React.Fragment>\n        ) : (\n          <FormUploader\n            value={files}\n            onAccept={onAccept}\n            onReject={onReject}\n            onDelete={onDeleteFiles}\n            variant={variant}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n);\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { FormUploader } from './FormUploader';\nimport { TesteUploader } from './TesteUploader';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"uploader-webmobile\"\n    }}>{`Uploader Web/Mobile`}</h1>\n    <Props of={FormUploader} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<div style={{ width: \\'100%\\', height: \\'100%\\' }}>\\n  <h3>Uploader form Web</h3>\\n  <TesteUploader type=\\\"form\\\" />\\n</div>\\n\\n<div>\\n  <h3>Uploader form Mobile (Galaxy S5)</h3>\\n  <div style={{ width: \\'360px\\', height: \\'640px\\', overwride: \\'hidden\\' }}>\\n    <TesteUploader type=\\\"form\\\" variant=\\\"mobile\\\" />\\n  </div>\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      FormUploader,\n      TesteUploader\n    }} __codesandbox={``} mdxType=\"Playground\">\n      <div style={{\n        width: '100%',\n        height: '100%'\n      }}>\n  <h3>Uploader form Web</h3>\n        <TesteUploader type=\"form\" mdxType=\"TesteUploader\" />\n      </div>\n\n      <div>\n  <h3>Uploader form Mobile (Galaxy S5)</h3>\n  <div style={{\n          width: '360px',\n          height: '640px',\n          overwride: 'hidden'\n        }}>\n    <TesteUploader type=\"form\" variant=\"mobile\" mdxType=\"TesteUploader\" />\n  </div>\n      </div>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { grey } from '@material-ui/core/colors';\n\nexport const defaultGreen = '#4caf50';\nexport const defaultGreenDarker = '#448744';\nexport const defaultRed = '#e6433f';\nexport const defaultRedDarker = '#af423e';\nexport const defaultOrange = '#ff9d0d';\nexport const defaultOrangeDarker = '#cd6e0d';\nexport const defaultGrey = grey[700];\nexport const defaultGreyLight = grey[500];\nexport const defaultGreyLight2 = grey[600];\nexport const defaultGreyLight3 = '#f7f7f7';\nexport const defaultGreyLight200 = grey[200];\nexport const defaultGreyDisabled = grey[400];\n"],"sourceRoot":""}