{"version":3,"sources":["/Users/feliperodrigues/Documents/Repositories/GitHub/ui-kit-master/src/Buttons/Button.js","/Users/feliperodrigues/Documents/Repositories/GitHub/ui-kit-master/src/Notifications/StyledSnackbarContent.js","/Users/feliperodrigues/Documents/Repositories/GitHub/ui-kit-master/src/Notifications/Snackbar.js","/Users/feliperodrigues/Documents/Repositories/GitHub/ui-kit-master/src/UploadFile/helper.js","/Users/feliperodrigues/Documents/Repositories/GitHub/ui-kit-master/src/UploadFile/Uploader.js","/Users/feliperodrigues/Documents/Repositories/GitHub/ui-kit-master/src/Alerts/ConfirmationAlert.js","/Users/feliperodrigues/Documents/Repositories/GitHub/ui-kit-master/src/UploadFile/UpFile.js","/Users/feliperodrigues/Documents/Repositories/GitHub/ui-kit-master/src/UploadFile/PreviewList.js","/Users/feliperodrigues/Documents/Repositories/GitHub/ui-kit-master/src/UploadFile/FormUploader.js","/Users/feliperodrigues/Documents/Repositories/GitHub/ui-kit-master/src/UploadFile/TesteUploader.js","/Users/feliperodrigues/Documents/Repositories/GitHub/ui-kit-master/src/UploadFile/FormUploader.mdx"],"names":["buttonStyle","_ref","buttonSpan","& > :first-child","marginRight","spacing","disabled","backgroundColor","defaultGrey","color","buttonColorDefault","&:hover","buttonColorSuccess","defaultGreen","buttonColorWarning","defaultOrange","buttonColorError","defaultRed","buttonClassNameDefinition","classes","margin","variant","_ref2","Object","_Users_feliperodrigues_Documents_Repositories_GitHub_ui_kit_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","marginTop","useStyles","makeStyles","Button","_ref3","submitting","fullWidth","type","_ref3$size","size","children","className","props","_Users_feliperodrigues_Documents_Repositories_GitHub_ui_kit_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classdef","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","assign","label","classNames","indexOf","undefined","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","defaultProps","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","theme","successSnack","errorSnack","infoSnack","warningSnack","iconSnack","fontSize","iconVariantSnack","opacity","messageSnack","display","alignItems","disabledSnack","StyledSnackbarContent","message","onClose","Icon","react_default","SnackbarContent","concat","aria-describedby","id","action","IconButton","key","aria-label","onClick","Close_default","Snackbar","show","anchorOrigin","vertical","horizontal","open","autoHideDuration","isImage","fileName","suffix","substr","toLowerCase","convertBytes","filesize","Math","round","useStyle","root","width","height","position","justifyContent","flexDirection","dropzone","textAlign","icon","alignSelf","textDiv","flexBasis","button","divider","marginBottom","buttonDiv","buttonIcon","text","iconColor","hidden","visibility","Uploader","forwardRef","ref","value","acceptedFormat","filesLimit","maxFileSize","onAccept","onReject","silent","_ref$messages","messages","title","buttonLabel","subtitle","maximumFileLimitMessage","maximumFileNumberMessage","filenameFailedMessage","filetypeNotSupportedMessage","sizeLimitErrorMessage","undefinedErrorMessage","_useState","useState","msg","_useState2","slicedToArray","snackbar","setSnackBar","_useDropzone","useDropzone","noClick","noKeyboard","accept","join","maxSize","onDrop","acceptedFiles","length","keys","filter","i","completed","map","file","onDropRejected","rejectedFiles","errorFile","forEach","rejectedFile","messageFile","name","includes","push","getRootProps","getInputProps","rootProps","event","stopPropagation","onKeyDown","keyCode","useImperativeHandle","Fragment","CloudUpload_default","colorPrimary","Typography","Divider","Snackbar_Snackbar","prevSnack","limit","ConfirmationAlert","proceed","dismiss","cancel","cancelButtonText","confirmButtonText","Dialog","DialogTitle","DialogContent","DialogActions","Button_Button","style","autoFocus","item","borderRadius","minHeight","paddingBottom","paddingTop","itemError","primary","maxHeight","maxWidth","flex","flexWrap","img","thumbnail","loading","barCompleted","barError","barError2","errorDiv","UpFile","uid","filename","setShowAlert","setSelectedUID","data","fileUploadedSucessfullyMessage","fileErroedMessage","isCompleted","setIsCompleted","_useState3","_useState4","isError","setIsError","alt","src","ListItem","ListItemIcon","ListItemText","noWrap","marginLeft","ErrorOutlineOutlined_default","padding","Clear_default","LinearProgress","bar1Determinate","determinate","scrollHiddenBar","overflowY","scrollbarWidth","-ms-overflow-style","&::-webkit-scrollbar","circle","list","unavailableColor","PreviewList","onDelete","headerLabel","noFileTopLabel","noFileBottomLabel","showAlert","selectedUID","_useState5","_useState6","fileRemovedMessage","ConfirmationAlert_ConfirmationAlert","Icon_default","path","mdiFileUpload","List","rootmobile","uploader","border","minWidth","overwride","uploadermobile","preview","previewmobile","FormUploader","matches","useMediaQuery","useTheme","breakpoints","down","mobile","defineProperty","TesteUploader","_ref$silent","files","setFiles","setOpen","newFiles","copyFiles","objectSpread","reader","FileReader","uniqid","onload","target","result","dummyError","timer","setInterval","prevFiles","random","clearInterval","DummyUploader","readAsDataURL","fileObj","onDeleteFiles","fileUID","aria-labelledby","layoutProps","MDXLayout","MDXContent","components","objectWithoutProperties","index_es","mdxType","index_esm","of","__position","__code","__scope","this","Playground","Props","__codesandbox","isMDXComponent"],"mappings":"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","file":"static/js/src-upload-file-form-uploader.fbef414e.js","sourcesContent":["import { Button as MaterialButton, CircularProgress } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  defaultGreen,\n  defaultGrey,\n  defaultOrange,\n  defaultRed,\n} from '../colors';\n\nexport const buttonStyle = ({ spacing }) => ({\n  buttonSpan: {\n    '& > :first-child': {\n      marginRight: spacing(0.5),\n    },\n  },\n  disabled: {\n    backgroundColor: defaultGrey,\n    color: 'white',\n  },\n  buttonColorDefault: {\n    backgroundColor: defaultGrey,\n    color: 'white',\n    '&:hover': {\n      backgroundColor: defaultGrey,\n    },\n  },\n  buttonColorSuccess: {\n    backgroundColor: defaultGreen,\n    color: 'white',\n    '&:hover': {\n      backgroundColor: defaultGreen,\n    },\n  },\n  buttonColorWarning: {\n    backgroundColor: defaultOrange,\n    color: 'white',\n    '&:hover': {\n      backgroundColor: defaultOrange,\n    },\n  },\n  buttonColorError: {\n    backgroundColor: defaultRed,\n    color: 'white',\n    '&:hover': {\n      backgroundColor: defaultRed,\n    },\n  },\n});\nexport function buttonClassNameDefinition(classes, disabled, margin, variant) {\n  return {\n    [classes.disabled]: disabled,\n    [classes.marginTop]: margin,\n    [classes.buttonColorDefault]: variant === 'default',\n    [classes.buttonColorSuccess]: variant === 'success',\n    [classes.buttonColorWarning]: variant === 'warning',\n    [classes.buttonColorError]: variant === 'error',\n  };\n}\nconst useStyles = makeStyles(buttonStyle);\n\nexport const Button = ({\n  submitting,\n  fullWidth,\n  disabled,\n  variant,\n  margin,\n  type,\n  size = 'medium',\n  children,\n  className,\n  ...props\n}) => {\n  const classes = useStyles();\n  const classdef = buttonClassNameDefinition(\n    classes,\n    disabled,\n    margin,\n    variant\n  );\n  return (\n    <MaterialButton\n      type={type}\n      variant=\"contained\"\n      classes={{ label: classes.buttonSpan }}\n      className={classNames(className, classdef)}\n      color={\n        ['primary', 'secondary'].indexOf(variant) > -1 ? variant : undefined\n      }\n      fullWidth={fullWidth}\n      disabled={disabled || submitting}\n      size={size}\n      {...props}\n    >\n      {submitting && <CircularProgress size={20} />} {children}\n    </MaterialButton>\n  );\n};\n\nButton.defaultProps = {\n  submitting: false,\n  margin: false,\n  disabled: false,\n  fullWidth: false,\n  variant: 'success',\n  type: 'submit',\n  size: 'medium',\n};\nButton.propTypes = {\n  variant: PropTypes.oneOf([\n    'default',\n    'success',\n    'warning',\n    'error',\n    'primary',\n    'secondary',\n  ]),\n  submitting: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  margin: PropTypes.bool,\n  disabled: PropTypes.bool,\n  type: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n};\n\nexport default Button;\n","import IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  defaultGreen,\n  defaultGrey,\n  defaultOrange,\n  defaultRed,\n} from '../colors';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles = makeStyles(theme => ({\n  successSnack: {\n    backgroundColor: defaultGreen,\n    color: 'white',\n  },\n  errorSnack: {\n    backgroundColor: defaultRed,\n    color: 'white',\n  },\n  infoSnack: {\n    backgroundColor: defaultGrey,\n    color: 'white',\n  },\n  warningSnack: {\n    backgroundColor: defaultOrange,\n    color: 'white',\n  },\n  iconSnack: {\n    fontSize: 20,\n  },\n  iconVariantSnack: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  messageSnack: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  disabledSnack: {},\n}));\n\nexport function StyledSnackbarContent(props) {\n  const { className, message, onClose, variant } = props;\n  const classes = useStyles();\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[`${variant}Snack`], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.messageSnack}>\n          <Icon\n            className={classNames(classes.iconSnack, classes.iconVariantSnack)}\n          />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.iconSnack} />\n        </IconButton>,\n      ]}\n    />\n  );\n}\n\nStyledSnackbarContent.defaultProps = {\n  message: '',\n  onClose: () => {},\n};\nStyledSnackbarContent.propTypes = {\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error']).isRequired,\n};\n","import { Snackbar as MaterialSnackbar } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyledSnackbarContent } from './StyledSnackbarContent';\n\nexport function Snackbar({ show, onClose, variant, children }) {\n  return (\n    <MaterialSnackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      open={show}\n      autoHideDuration={6000}\n      onClose={onClose}\n    >\n      <StyledSnackbarContent\n        onClose={onClose}\n        variant={variant}\n        message={children}\n      />\n    </MaterialSnackbar>\n  );\n}\n\nSnackbar.defaultProps = {\n  onClose: () => {},\n};\nSnackbar.propTypes = {\n  onClose: PropTypes.func,\n  show: PropTypes.bool.isRequired,\n  variant: PropTypes.oneOf(['success', 'warning', 'error']).isRequired,\n};\nexport default Snackbar;\n","export function isImage(fileName) {\n  const suffix = fileName.substr(fileName.indexOf('.') + 1).toLowerCase();\n  if (\n    suffix === 'jpg' ||\n    suffix === 'jpeg' ||\n    suffix === 'bmp' ||\n    suffix === 'png'\n  ) {\n    return true;\n  }\n  return false;\n}\nexport function convertBytes(filesize) {\n  let size = '';\n  if (filesize >= 1000000) {\n    size = `${Math.round(filesize / 1000000)}Mb`;\n  } else if (filesize >= 1000) {\n    size = `${Math.round(filesize / 1000)}Kb`;\n  } else {\n    size = `${Math.round(filesize)}bytes`;\n  }\n  return size;\n}\n","import React, { useState, useImperativeHandle, forwardRef } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport PropTypes from 'prop-types';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport { Snackbar } from '../Notifications/Snackbar';\nimport { convertBytes } from './helper';\nimport { Button } from '../Buttons/Button';\n\nconst useStyle = makeStyles({\n  root: {\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  dropzone: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    textAlign: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  icon: {\n    alignSelf: 'center',\n    height: '80%',\n    width: '80%',\n  },\n  textDiv: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    flexBasis: '40%',\n  },\n  button: {\n    alignSelf: 'center',\n    width: '70%',\n  },\n  divider: {\n    width: '25%',\n    alignSelf: 'center',\n    marginBottom: '4%',\n    marginTop: '1%',\n  },\n  buttonDiv: {\n    alignSelf: 'center',\n    display: 'flex',\n    textAlign: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  buttonIcon: {\n    marginRight: '5%',\n  },\n  text: {\n    marginBottom: '1%',\n  },\n  iconColor: {\n    color: '#61616152',\n  },\n  hidden: {\n    visibility: 'hidden',\n  },\n});\n\nexport const Uploader = forwardRef(\n  (\n    {\n      value,\n      acceptedFormat,\n      filesLimit,\n      maxFileSize,\n      onAccept,\n      onReject,\n      silent,\n      messages: {\n        title,\n        buttonLabel,\n        subtitle,\n        maximumFileLimitMessage,\n        maximumFileNumberMessage,\n        filenameFailedMessage,\n        filetypeNotSupportedMessage,\n        sizeLimitErrorMessage,\n        undefinedErrorMessage,\n      },\n    },\n    ref\n  ) => {\n    const [snackbar, setSnackBar] = useState({\n      show: false,\n      variant: 'error',\n      msg: '',\n    });\n    const classes = useStyle();\n\n    const { getRootProps, getInputProps, open } = useDropzone({\n      noClick: true,\n      noKeyboard: true,\n      accept: acceptedFormat.join(','),\n      maxSize: maxFileSize,\n      onDrop: acceptedFiles => {\n        // The limit only counts uploading file (no error and no completed)\n        if (\n          acceptedFiles.length +\n            Object.keys(value).filter(\n              i => !value[i].error && !(value[i].completed >= 100)\n            ).length <=\n          filesLimit\n        ) {\n          if (onAccept) {\n            onAccept(acceptedFiles);\n          }\n        } else {\n          setSnackBar({\n            show: true,\n            variant: 'error',\n            msg: maximumFileLimitMessage(filesLimit),\n          });\n          if (onReject) {\n            onReject(\n              acceptedFiles.map(file => ({\n                file,\n                error: maximumFileNumberMessage,\n              }))\n            );\n          }\n        }\n      },\n      onDropRejected: rejectedFiles => {\n        let message = '';\n        const errorFile = [];\n        rejectedFiles.forEach(rejectedFile => {\n          let messageFile = '';\n          message += filenameFailedMessage(rejectedFile.name);\n          if (!acceptedFormat.includes(rejectedFile.type)) {\n            messageFile += filetypeNotSupportedMessage;\n          }\n          if (rejectedFile.size > maxFileSize) {\n            messageFile += sizeLimitErrorMessage(convertBytes(maxFileSize));\n          }\n          if (messageFile === '') {\n            messageFile = undefinedErrorMessage;\n          }\n          errorFile.push({ file: rejectedFile, error: messageFile });\n        });\n        setSnackBar({\n          show: true,\n          variant: 'error',\n          msg: message,\n        });\n        if (onReject && errorFile.length > 0) {\n          onReject(errorFile);\n        }\n      },\n    });\n\n    const rootProps = getRootProps({\n      // Disable click and keydown behavior\n      onClick: event => event.stopPropagation(),\n      onKeyDown: event => {\n        if (event.keyCode === 32 || event.keyCode === 13) {\n          event.stopPropagation();\n        }\n      },\n    });\n\n    useImperativeHandle(ref, () => ({\n      open,\n    }));\n\n    return (\n      <React.Fragment>\n        {silent ? (\n          <div ref={ref}>\n            <input {...getInputProps()} className={classes.hidden} />\n          </div>\n        ) : (\n          <div {...rootProps} className={classes.root}>\n            <input {...getInputProps()} />\n            <div className={classes.dropzone}>\n              <div className={classes.textDiv} ref={ref}>\n                <CloudUploadIcon\n                  fontSize=\"large\"\n                  color=\"primary\"\n                  className={classes.icon}\n                  classes={{ colorPrimary: classes.iconColor }}\n                />\n                <Typography variant=\"h5\" color=\"textSecondary\">\n                  {title}\n                </Typography>\n              </div>\n\n              <div className={classes.divider}>\n                <Divider variant=\"middle\" />\n              </div>\n\n              <div className={classes.buttonDiv}>\n                <Typography\n                  variant=\"body2\"\n                  className={classes.text}\n                  color=\"textSecondary\"\n                >\n                  {subtitle}\n                </Typography>\n                <Button\n                  variant=\"secondary\"\n                  onClick={open}\n                  className={classes.button}\n                >\n                  <CloudUploadIcon className={classes.buttonIcon} />\n                  {buttonLabel}\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n        <Snackbar\n          show={snackbar.show}\n          variant={snackbar.variant}\n          onClose={() =>\n            setSnackBar(prevSnack => ({\n              show: false,\n              variant: prevSnack.variant,\n              msg: prevSnack.msg,\n            }))\n          }\n        >\n          {snackbar.msg}\n        </Snackbar>\n      </React.Fragment>\n    );\n  }\n);\n\nUploader.defaultProps = {\n  value: {},\n  acceptedFormat: ['image/*', 'video/*', 'application/*'],\n  filesLimit: 3,\n  maxFileSize: 3000000,\n  onAccept: null,\n  onReject: null,\n  messages: {\n    maximumFileLimitMessage: limit =>\n      `Maximum allowed number of files exceeded. Only ${limit} allowed`,\n    maximumFileNumberMessage: 'Maximum allowed number of files',\n    filenameFailedMessage: name => `${name} failed. `,\n    filetypeNotSupportedMessage: 'File type not supported. ',\n    sizeLimitErrorMessage: size => `Size limit ${size}.`,\n    undefinedErrorMessage: 'Undefined error',\n    title: 'Drag and drop a file',\n    buttonLabel: 'Upload Files',\n    subtitle: 'or click on the button',\n  },\n\n  silent: false,\n};\n\nUploader.propTypes = {\n  acceptedFormat: PropTypes.array,\n  filesLimit: PropTypes.number,\n  maxFileSize: PropTypes.number,\n  onAccept: PropTypes.func,\n  onReject: PropTypes.func,\n  silent: PropTypes.bool,\n  value: PropTypes.shape({\n    uid: PropTypes.number,\n    file: PropTypes.object,\n    completed: PropTypes.number,\n    uprate: PropTypes.number,\n    error: PropTypes.string,\n  }),\n  messages: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    buttonLabel: PropTypes.string,\n    filetypeNotSupportedMessage: PropTypes.string,\n    undefinedErrorMessage: PropTypes.string,\n    maximumFileLimitMessage: PropTypes.func,\n    filenameFailedMessage: PropTypes.func,\n    sizeLimitErrorMessage: PropTypes.func,\n  }),\n};\n","import React from 'react';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { DialogContent } from '@material-ui/core';\nimport { defaultGrey } from '../colors';\n\nexport const ConfirmationAlert = ({\n  show,\n  proceed,\n  dismiss,\n  cancel,\n  children,\n  text,\n  cancelButtonText,\n  confirmButtonText,\n}) => (\n  <Dialog open={show} onClose={dismiss}>\n    <DialogTitle id=\"alert-dialog-title\"> {text} </DialogTitle>\n    <DialogContent>{children}</DialogContent>\n    <DialogActions>\n      <Button onClick={() => cancel()} style={{ color: defaultGrey }}>\n        {cancelButtonText}\n      </Button>\n      <Button\n        onClick={() => proceed()}\n        style={{ color: defaultGrey }}\n        autoFocus\n      >\n        {confirmButtonText}\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\nConfirmationAlert.defaultProps = {\n  text: 'Você tem certeza?',\n  cancelButtonText: 'Cancelar',\n  confirmButtonText: 'Confirmar',\n};\nConfirmationAlert.propTypes = {\n  show: PropTypes.bool.isRequired,\n  proceed: PropTypes.func.isRequired,\n  dismiss: PropTypes.func.isRequired,\n  cancel: PropTypes.func.isRequired,\n  text: PropTypes.object,\n  cancelButtonText: PropTypes.string,\n  confirmButtonText: PropTypes.string,\n};\n","import React, { useState } from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Typography } from '@material-ui/core';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport ErrorOutlineOutlined from '@material-ui/icons/ErrorOutlineOutlined';\nimport Clear from '@material-ui/icons/Clear';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/styles';\n// import AttachFileIcon from '@material-ui/icons/AttachFile';\nimport { isImage } from './helper';\n\nconst useStyle = makeStyles({\n  item: {\n    backgroundColor: '#f7f7f7',\n    borderRadius: '5px 5px 0px 0px ',\n    minHeight: '55px',\n    marginTop: '3%',\n    paddingBottom: '5px',\n    paddingTop: '5px',\n    // border: '2px dashed blue',\n  },\n  itemError: {\n    backgroundColor: '#ffb1b1',\n    borderRadius: '5px 5px 0px 0px ',\n    minHeight: '55px',\n    marginTop: '3%',\n    paddingBottom: '5px',\n    paddingTop: '5px',\n  },\n  primary: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    // border: '2px dashed blue',\n    width: '100%',\n    maxHeight: '10%',\n  },\n  info: {\n    maxWidth: '100%',\n    // border: '2px dashed red',\n    display: 'flex',\n    alignItems: 'baseline',\n    flex: '2 1 auto',\n    flexWrap: 'wrap',\n  },\n  img: {\n    maxWidth: '40px',\n    maxHeight: '40px',\n    // border: '2px dashed green',\n    display: 'block',\n  },\n  thumbnail: {\n    // border: '2px dashed green',\n    width: '40px',\n    height: '40px',\n    display: 'flex',\n    justifyContent: 'center',\n    marginRight: '0px',\n  },\n  loading: {\n    borderRadius: '0px 0px 5px 5px ',\n  },\n  barCompleted: {\n    backgroundColor: '#4caf50',\n  },\n  barError: {\n    backgroundColor: '#e6433f',\n  },\n  barError2: {\n    backgroundColor: '#ffb1b1',\n  },\n  errorDiv: {\n    display: 'flex',\n    alignItems: 'center',\n    // border: '2px dashed blue',\n    width: '100%',\n  },\n  name: {\n    // border: '2px dashed green',\n    maxWidth: '60%',\n  },\n});\n\nexport function UpFile({\n  uid,\n  filename,\n  completed,\n  filesize,\n  setShowAlert,\n  setSelectedUID,\n  data,\n  error,\n  setSnackBar,\n  messages: { fileUploadedSucessfullyMessage, fileErroedMessage },\n}) {\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const classes = useStyle();\n\n  if (completed >= 100 && !isCompleted) {\n    setSnackBar({\n      show: true,\n      variant: 'success',\n      msg: fileUploadedSucessfullyMessage(filename),\n    });\n    setIsCompleted(true);\n  }\n\n  if (error && !isError) {\n    setSnackBar({\n      show: true,\n      variant: 'error',\n      msg: fileErroedMessage(filename, error),\n    });\n    setIsError(true);\n  }\n\n  const img =\n    isImage(filename) && data ? (\n      <img alt=\"presentation\" src={data} className={classes.img} />\n    ) : null;\n\n  return (\n    <React.Fragment>\n      <ListItem key={uid} className={error ? classes.itemError : classes.item}>\n        {img ? (\n          <ListItemIcon className={classes.thumbnail}>{img}</ListItemIcon>\n        ) : null}\n        <ListItemText\n          primary={\n            <div className={classes.primary}>\n              <div className={classes.info}>\n                <Typography variant=\"subtitle2\" noWrap className={classes.name}>\n                  {filename}\n                </Typography>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body2\"\n                  style={{ marginLeft: '2%' }}\n                >\n                  ({filesize})\n                </Typography>\n                {error ? (\n                  <div className={classes.errorDiv}>\n                    <ErrorOutlineOutlined fontSize=\"small\" />\n                    <Typography\n                      variant=\"caption\"\n                      style={{ marginLeft: '2%' }}\n                      noWrap\n                    >\n                      {error}\n                    </Typography>\n                  </div>\n                ) : null}\n              </div>\n            </div>\n          }\n        />\n        <IconButton\n          onClick={() => {\n            setShowAlert(true);\n            setSelectedUID(uid);\n          }}\n          style={{ padding: '0px' }}\n        >\n          <Clear fontSize=\"small\" />\n        </IconButton>\n      </ListItem>\n      {\n        <LinearProgress\n          variant=\"determinate\"\n          value={completed}\n          className={classes.loading}\n          classes={\n            error\n              ? {\n                  bar1Determinate: classes.barError,\n                  determinate: classes.barError2,\n                }\n              : {\n                  bar1Determinate:\n                    completed >= 100 ? classes.barCompleted : null,\n                }\n          }\n        />\n      }\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport List from '@material-ui/core/List';\nimport { Typography } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport { mdiFileUpload } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport { makeStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport { convertBytes } from './helper';\nimport { ConfirmationAlert } from '../Alerts/ConfirmationAlert';\nimport { UpFile } from './UpFile';\nimport { Snackbar } from '../Notifications/Snackbar';\n\nconst useStyle = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    height: '100%',\n    width: '100%',\n  },\n  scrollHiddenBar: {\n    maxHeight: 300,\n    overflowY: 'scroll',\n    scrollbarWidth: 'none',\n    '-ms-overflow-style': 'none',\n    '&::-webkit-scrollbar': {\n      width: 0,\n      height: 0,\n    },\n  },\n  circle: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    backgroundColor: '#f7f7f7',\n    height: '200px',\n    width: '200px',\n    borderRadius: '50%',\n  },\n  icon: {\n    alignItems: 'center',\n  },\n  text: {\n    textAlign: 'center',\n  },\n  list: {},\n  unavailableColor: {\n    color: '#cacacb',\n  },\n  iconColor: {\n    backgroundColor: '#f7f7f7',\n  },\n});\n\nexport function PreviewList({\n  value,\n  onDelete,\n  headerLabel,\n  noFileTopLabel,\n  noFileBottomLabel,\n  messages,\n}) {\n  const [showAlert, setShowAlert] = useState(false);\n  const [selectedUID, setSelectedUID] = useState('');\n  const [snackbar, setSnackBar] = useState({\n    show: false,\n    variant: 'error',\n    msg: '',\n  });\n  const { fileRemovedMessage } = messages;\n  const classes = useStyle();\n\n  return (\n    <React.Fragment>\n      <ConfirmationAlert\n        show={showAlert}\n        proceed={() => {\n          setSnackBar({\n            show: true,\n            variant: 'warning',\n            msg: fileRemovedMessage,\n          });\n          setShowAlert(false);\n          onDelete(selectedUID);\n        }}\n        cancel={() => {\n          setShowAlert(false);\n          setSelectedUID('');\n        }}\n        dismiss={() => {\n          setShowAlert(false);\n          setSelectedUID('');\n        }}\n      />\n      <Snackbar\n        show={snackbar.show}\n        variant={snackbar.variant}\n        onClose={() =>\n          setSnackBar(prevSnack => ({\n            show: false,\n            variant: prevSnack.variant,\n            msg: prevSnack.msg,\n          }))\n        }\n      >\n        {snackbar.msg}\n      </Snackbar>\n\n      {Object.keys(value).length <= 0 ? (\n        <div className={classes.root}>\n          <div className={classes.circle}>\n            <Icon path={mdiFileUpload} size={2} className={classes.iconColor} />\n\n            <Typography\n              variant=\"h5\"\n              color=\"primary\"\n              className={classes.text}\n              classes={{ colorPrimary: classes.unavailableColor }}\n            >\n              {noFileTopLabel}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"primary\"\n              className={classes.text}\n              classes={{ colorPrimary: classes.unavailableColor }}\n            >\n              {noFileBottomLabel}\n            </Typography>\n          </div>\n        </div>\n      ) : (\n        <React.Fragment>\n          {headerLabel && (\n            <div>\n              <Typography variant=\"h6\">{headerLabel}</Typography>\n              <Divider style={{ marginTop: '2%' }} />\n            </div>\n          )}\n          <div className={classes.scrollHiddenBar}>\n            <List className={classes.list}>\n              {Object.keys(value).map((uid, i) => (\n                <UpFile\n                  uid={uid}\n                  filename={value[uid].file.name}\n                  completed={value[uid].completed}\n                  filesize={convertBytes(value[uid].file.size)}\n                  divider={Object.keys(value).length !== i + 1}\n                  setShowAlert={setShowAlert}\n                  setSelectedUID={setSelectedUID}\n                  data={value[uid].data}\n                  error={value[uid].error}\n                  setSnackBar={setSnackBar}\n                  messages={messages}\n                  key={uid}\n                />\n              ))}\n            </List>\n          </div>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nPreviewList.defaultProps = {\n  value: {},\n  onDelete: () => {},\n  headerLabel: null,\n  noFileTopLabel: 'Upload Files',\n  noFileBottomLabel: 'Appear Here',\n  messages: {\n    fileRemovedMessage: 'File removed from upload list',\n    fileUploadedSucessfullyMessage: filename =>\n      `${filename} uploaded successfully`,\n    fileErroedMessage: (filename, error) => `${filename} error: ${error}`,\n  },\n};\n\nPreviewList.propTypes = {\n  value: PropTypes.shape({\n    uid: PropTypes.number,\n    file: PropTypes.object,\n    completed: PropTypes.number,\n    uprate: PropTypes.number,\n    error: PropTypes.string,\n  }),\n  onDelete: PropTypes.func,\n  headerLabel: PropTypes.string,\n  noFileBottomLabel: PropTypes.string,\n  noFileTopLabel: PropTypes.string,\n  messages: PropTypes.shape({\n    fileRemovedMessage: PropTypes.string,\n    fileUploadedSucessfullyMessage: PropTypes.func,\n    fileErroedMessage: PropTypes.func,\n  }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { Uploader } from './Uploader';\nimport { PreviewList } from './PreviewList';\n\nconst useStyle = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n  },\n  rootmobile: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n  },\n  uploader: {\n    borderRadius: '2px',\n    border: '1px dashed #80808070',\n    backgroundColor: '#f7f7f7',\n    minWidth: '50%',\n    overwride: 'hidden',\n  },\n  uploadermobile: {\n    width: '100%',\n  },\n  preview: {\n    marginLeft: '3%',\n    width: '47%',\n    display: 'flex',\n    flexDirection: 'column',\n    overwride: 'hidden',\n  },\n  previewmobile: {\n    marginLeft: '0px',\n    width: '100%',\n  },\n}));\n\nexport function FormUploader({\n  value,\n  acceptedFormat,\n  filesLimit,\n  maxFileSize,\n  title,\n  buttonLabel,\n  subtitle,\n  onAccept,\n  onReject,\n  onDelete,\n  variant,\n  headerLabel,\n  noFileTopLabel,\n  noFileBottomLabel,\n}) {\n  const classes = useStyle();\n\n  const matches = useMediaQuery(useTheme().breakpoints.down('xs'));\n\n  let mobile = false;\n  if (variant === 'auto') {\n    if (matches) {\n      mobile = true;\n    }\n  } else if (variant === 'mobile') {\n    mobile = true;\n  }\n\n  return (\n    <div\n      className={classNames(classes.root, {\n        [classes.rootmobile]: mobile,\n      })}\n    >\n      <div\n        className={classNames(classes.uploader, {\n          [classes.uploadermobile]: mobile,\n        })}\n      >\n        <Uploader\n          value={value}\n          acceptedFormat={acceptedFormat}\n          filesLimit={filesLimit}\n          maxFileSize={maxFileSize}\n          title={title}\n          buttonLabel={buttonLabel}\n          onAccept={onAccept}\n          onReject={onReject}\n          subtitle={subtitle}\n        />\n      </div>\n\n      <div\n        className={classNames(classes.preview, {\n          [classes.previewmobile]: mobile,\n        })}\n      >\n        <PreviewList\n          value={value}\n          onDelete={onDelete}\n          headerLabel={headerLabel}\n          noFileBottomLabel={noFileBottomLabel}\n          noFileTopLabel={noFileTopLabel}\n        />\n      </div>\n    </div>\n  );\n}\n\nFormUploader.defaultProps = {\n  value: {},\n  acceptedFormat: ['image/*', 'video/*', 'application/*'],\n  filesLimit: 3,\n  maxFileSize: 3000000,\n  title: 'Drag and drop a file',\n  buttonLabel: 'Upload Files',\n  subtitle: 'or click on the button',\n  onAccept: null,\n  onReject: null,\n  onDelete: null,\n  variant: 'auto',\n  headerLabel: 'Uploading Files',\n  noFileTopLabel: 'Upload Files',\n  noFileBottomLabel: 'Appear Here',\n};\n\nFormUploader.propTypes = {\n  acceptedFormat: PropTypes.array,\n  filesLimit: PropTypes.number,\n  maxFileSize: PropTypes.number,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  buttonLabel: PropTypes.string,\n  value: PropTypes.shape({\n    uid: PropTypes.number,\n    file: PropTypes.object,\n    completed: PropTypes.number,\n    uprate: PropTypes.number,\n    error: PropTypes.string,\n  }),\n  onAccept: PropTypes.func,\n  onReject: PropTypes.func,\n  onDelete: PropTypes.func,\n  variant: PropTypes.oneOf(['auto', 'mobile', 'web']),\n  headerLabel: PropTypes.string,\n  noFileBottomLabel: PropTypes.string,\n  noFileTopLabel: PropTypes.string,\n};\n","import React, { useState, forwardRef } from 'react';\nimport uniqid from 'uniqid';\nimport { setInterval, clearInterval } from 'timers';\nimport Dialog from '@material-ui/core/Dialog';\n// import DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Uploader } from './Uploader';\nimport { PreviewList } from './PreviewList';\nimport { FormUploader } from './FormUploader';\n\nexport const TesteUploader = forwardRef(\n  ({ type, variant, silent = false }, ref) => {\n    const [files, setFiles] = useState({});\n    const [open, setOpen] = useState(false);\n\n    function DummyUploader(uid, dummyError) {\n      const timer = setInterval(\n        () =>\n          setFiles(prevFiles => {\n            const copyFiles = { ...prevFiles };\n\n            if (copyFiles[uid] === null) {\n              return prevFiles;\n            }\n\n            copyFiles[uid] = {\n              data: copyFiles[uid].data,\n              file: copyFiles[uid].file,\n\n              // Only update completed when there isn't an error, otherwise it\n              // will continue to load the bar in an error state though.\n              completed:\n                copyFiles[uid].completed > 50 && dummyError\n                  ? copyFiles[uid].completed\n                  : copyFiles[uid].completed + Math.random() * 10,\n\n              uploader: timer,\n\n              // Verify if this dummy example should enter in an error state\n              error:\n                copyFiles[uid].completed > 50 && dummyError\n                  ? 'Dummy error'\n                  : null,\n            };\n\n            if (copyFiles[uid].completed >= 100) {\n              clearInterval(timer);\n            }\n\n            return copyFiles;\n          }),\n        800\n      );\n    }\n\n    const onAccept = newFiles => {\n      setOpen(true);\n      const copyFiles = { ...files };\n      newFiles.forEach(file => {\n        const reader = new FileReader();\n        const uid = uniqid();\n\n        // Set state after reading async the files\n        reader.onload = event => {\n          copyFiles[uid] = {\n            file,\n            data: event.target.result,\n            completed: 0,\n            uploader: null,\n            error: null,\n          };\n          setFiles(copyFiles);\n\n          // Dummy uploader update the file upload values and fake a\n          // a error when it has added more than 2 files\n          DummyUploader(uid, Object.keys(copyFiles).length > 2);\n        };\n        reader.readAsDataURL(file);\n      });\n    };\n\n    const onReject = newFiles => {\n      setOpen(true);\n      const copyFiles = { ...files };\n      newFiles.forEach(fileObj => {\n        const uid = uniqid();\n\n        copyFiles[uid] = {\n          file: fileObj.file,\n          data: null,\n          completed: 0,\n          uploader: null,\n          error: fileObj.error,\n        };\n        setFiles(copyFiles);\n\n        // Dummy uploader update the file upload values and fake a\n        // a error when it has added more than 2 files\n        // if (!fileObj.error) DummyUploader(uid, Object.keys(copyFiles).length > 2);\n      });\n    };\n\n    const onDeleteFiles = fileUID => {\n      const copyFiles = { ...files };\n\n      // Note: Before update the state (excluding),\n      // this example should stop the upload process (dummy here)\n      clearInterval(copyFiles[fileUID].uploader);\n\n      // Update state\n      delete copyFiles[fileUID];\n      setFiles(copyFiles);\n    };\n\n    return (\n      <React.Fragment>\n        {type !== 'form' ? (\n          <React.Fragment>\n            <Uploader\n              value={files}\n              onAccept={onAccept}\n              onReject={onReject}\n              filesLimit={3}\n              silent={silent}\n              ref={ref}\n            />\n            <Dialog\n              onClose={() => setOpen(false)}\n              open={open}\n              aria-labelledby=\"simple-dialog-title\"\n            >\n              <DialogTitle id=\"form-dialog-title\">Uploading Files</DialogTitle>\n              <DialogContent>\n                <PreviewList value={files} onDelete={onDeleteFiles} />\n              </DialogContent>\n            </Dialog>\n          </React.Fragment>\n        ) : (\n          <FormUploader\n            value={files}\n            onAccept={onAccept}\n            onReject={onReject}\n            onDelete={onDeleteFiles}\n            variant={variant}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n);\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { FormUploader } from './FormUploader';\nimport { TesteUploader } from './TesteUploader';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"uploader-webmobile\"\n    }}>{`Uploader Web/Mobile`}</h1>\n    <Props of={FormUploader} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<div style={{ width: \\'100%\\', height: \\'100%\\' }}>\\n  <h3>Uploader form Web</h3>\\n  <TesteUploader type=\\\"form\\\" />\\n</div>\\n\\n<div>\\n  <h3>Uploader form Mobile (Galaxy S5)</h3>\\n  <div style={{ width: \\'360px\\', height: \\'640px\\', overwride: \\'hidden\\' }}>\\n    <TesteUploader type=\\\"form\\\" variant=\\\"mobile\\\" />\\n  </div>\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      FormUploader,\n      TesteUploader\n    }} __codesandbox={``} mdxType=\"Playground\">\n      <div style={{\n        width: '100%',\n        height: '100%'\n      }}>\n  <h3>Uploader form Web</h3>\n        <TesteUploader type=\"form\" mdxType=\"TesteUploader\" />\n      </div>\n\n      <div>\n  <h3>Uploader form Mobile (Galaxy S5)</h3>\n  <div style={{\n          width: '360px',\n          height: '640px',\n          overwride: 'hidden'\n        }}>\n    <TesteUploader type=\"form\" variant=\"mobile\" mdxType=\"TesteUploader\" />\n  </div>\n      </div>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}