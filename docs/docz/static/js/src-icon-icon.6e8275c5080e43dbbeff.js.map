{"version":3,"sources":["/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/docz/IconSearch.js","/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/Icon/Icon.mdx","/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/Inputs/styleUtils.js","/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/Inputs/Input.js","/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/Inputs/InputStyles.js","/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/Inputs/Masks.js","/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/colors.js"],"names":["IconWrapper","_ref","iconPath","path","react_default","a","createElement","title","onClick","navigator","clipboard","writeText","concat","then","alert","Icon_default","key","size","IconSearch","_useState","useState","_useState2","Object","slicedToArray","value","setValue","Input","label","onChange","e","target","style","display","flexWrap","keys","Icons","filter","toLowerCase","includes","map","IconSearch_IconWrapper","layoutProps","MDXLayout","MDXContent","components","props","objectWithoutProperties","index_es","assign","mdxType","id","index_esm","of","Icon","isMDXComponent","outlinedInputClass","success","error","warning","labelClass","_ref2","StyledFlexDiv","styled","_ref3","theme","alignItems","boxShadow","marginRight","endAdornmentMargin","spacing","unit","TypographyStyled","Typography","_ref4","marginLeft","GetEndAdornment","_ref5","stateIcon","endAdornment","mdiCloseCircle","color","defaultRed","mdiCheckCircle","defaultGreen","mdiAlertCircle","defaultOrange","TextMaskCustom","inputMask","pipeFunc","inputRef","mask","other","CEP_MASK","PHONE_MASK","CELL_MASK","CPF_MASK","CURRENCY_MASK","CNPJ_MASK","PLATE_MASK","conformedValue","toUpperCase","CELL_PHONE_MASK","CPF_CNPJ_MASK","DATE_MASK","TIME_MASK","reactTextMask_default","ref","inputElement","pipe","showMask","maskConfig","TextFieldComponent","classes","name","disabled","shrinkLabel","placeholder","_ref2$endAdornmentMar","startAdornment","input","TextField_default","InputLabelProps","root","classNames","focused","cssFocused","shrink","InputProps","inputComponent","undefined","inputProps","className","inputRoot","notchedOutline","inputAdornedStart","adornedMarginLeft","inputAdornedEnd","adornedMarginRight","adornedEnd","adornedMarginEnd","margin","variant","InputUI","withStyles","inputStyles","_ref3$fullWidth","fullWidth","helperText","Input_TextFieldComponent","defaultProps","stylesError","cssOutlinedInputRed","&$cssFocused $notchedOutline","borderColor","&:hover:not($disabled):not($focused):not($error) $notchedOutline","defaultRedDarker","cssLabelRed","&$cssFocused","stylesSuccess","cssOutlinedInputSuccess","& $notchedOutline","defaultGreenDarker","cssLabelSuccess","stylesWarning","cssOutlinedInputWarning","defaultOrangeDarker","cssLabelWarning","_dados_ext4_TecSinapse_Proj_react_prs_ui_kit_node_modules_docz_core_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","paddingRight","cssOutlinedInput","palette","secondary","main","cssLabel","__webpack_require__","d","__webpack_exports__","text_mask_addons_dist_createNumberMask__WEBPACK_IMPORTED_MODULE_0__","text_mask_addons_dist_createNumberMask__WEBPACK_IMPORTED_MODULE_0___default","n","text_mask_core_dist_textMaskCore__WEBPACK_IMPORTED_MODULE_1__","conformToMask","text","coreConformToMask","guide","placeholderChar","PLATE_MERCO_MASK","PLATE_OLD_MASK","PLATE_MASK_DEF","rawValue","length","fth","charAt","sth","TIME_MASK_1","TIME_MASK_2","createNumberMask","prefix","suffix","thousandsSeparatorSymbol","decimalSymbol","allowDecimal","defaultGrey","_material_ui_core_colors__WEBPACK_IMPORTED_MODULE_0__","grey","defaultGreyLight","defaultGreyLight2","defaultGreyLight200","defaultGreyDisabled"],"mappings":"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","file":"static/js/src-icon-icon.20c7d47a.js","sourcesContent":["/* eslint-disable */\n\nimport Icon from '@mdi/react';\nimport * as Icons from '@mdi/js';\nimport React, { useState } from 'react';\nimport { Input } from '../src/Inputs/Input';\n\nconst IconWrapper = ({ iconPath, path }) => (\n  <div\n    title={path}\n    onClick={() => {\n      navigator.clipboard\n        .writeText(\n          `\n            import { ${path} } from '@mdi/js';\n            import Icon from '@mdi/react';\n            <Icon path={${path}} size={1} />\n          `\n        )\n        .then(\n          () => {\n            alert('Copied to clipboard successfully!');\n          },\n          () => {\n            alert('Unable to write to clipboard');\n          }\n        );\n    }}\n  >\n    <Icon path={iconPath} key={path} size={1} />\n  </div>\n);\n\nexport default function IconSearch() {\n  const [value, setValue] = useState('');\n  return (\n    <div>\n      <Input\n        label=\"Busque um ícone\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n        {Object.keys(Icons)\n          .filter(\n            path =>\n              value === '' || path.toLowerCase().includes(value.toLowerCase())\n          )\n          .map(iconPath => (\n            <IconWrapper\n              iconPath={Icons[iconPath]}\n              key={iconPath}\n              path={iconPath}\n            />\n          ))}\n      </div>\n    </div>\n  );\n}\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport Icon from '@mdi/react';\nimport { Playground, Props } from 'docz';\nimport Input from '../Inputs/Input';\nimport * as Icons from '@mdi/js';\nimport { useState } from 'react';\nimport IconSearch from '../../docz/IconSearch'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"icons\"\n    }}>{`Icons`}</h1>\n    <Props of={Icon} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <IconSearch mdxType=\"IconSearch\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { mdiAlertCircle, mdiCheckCircle, mdiCloseCircle } from '@mdi/js';\nimport React from 'react';\nimport Icon from '@mdi/react';\nimport { styled } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { defaultGreen, defaultOrange, defaultRed } from '../colors';\n\nexport const outlinedInputClass = ({ success, error, warning }) => {\n  if (error) {\n    return 'cssOutlinedInputRed';\n  }\n  if (success) {\n    return 'cssOutlinedInputSuccess';\n  }\n  if (warning) {\n    return 'cssOutlinedInputWarning';\n  }\n  return 'cssOutlinedInput';\n};\n\nexport const labelClass = ({ success, error, warning }) => {\n  if (error) {\n    return 'cssLabelRed';\n  }\n  if (success) {\n    return 'cssLabelSuccess';\n  }\n  if (warning) {\n    return 'cssLabelWarning';\n  }\n  return 'cssLabel';\n};\n\nconst StyledFlexDiv = styled('div')(({ theme, endAdornmentMargin }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  boxShadow: 'none !important',\n  marginRight: endAdornmentMargin ? theme.spacing.unit : 0,\n}));\nconst TypographyStyled = styled(Typography)(({ theme }) => ({\n  marginLeft: theme.spacing.unit / 4,\n}));\nexport function GetEndAdornment({\n  warning,\n  error,\n  success,\n  endAdornment,\n  endAdornmentMargin,\n}) {\n  let stateIcon;\n  if (error) {\n    stateIcon = <Icon path={mdiCloseCircle} color={defaultRed} size={1} />;\n  }\n  if (success) {\n    stateIcon = <Icon path={mdiCheckCircle} color={defaultGreen} size={1} />;\n  }\n  if (warning) {\n    stateIcon = <Icon path={mdiAlertCircle} color={defaultOrange} size={1} />;\n  }\n  if (stateIcon && endAdornment) {\n    return (\n      <StyledFlexDiv endAdornmentMargin={endAdornmentMargin}>\n        {stateIcon} <TypographyStyled>|</TypographyStyled> {endAdornment}\n      </StyledFlexDiv>\n    );\n  }\n  return (\n    <StyledFlexDiv endAdornmentMargin={endAdornmentMargin}>\n      {stateIcon && stateIcon}\n      {endAdornment && endAdornment}\n    </StyledFlexDiv>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport MaskedInput from 'react-text-mask';\nimport classNames from 'classnames';\nimport { inputStyles } from './InputStyles';\nimport {\n  CELL_MASK,\n  CELL_PHONE_MASK,\n  CEP_MASK,\n  CNPJ_MASK,\n  CPF_CNPJ_MASK,\n  CPF_MASK,\n  CURRENCY_MASK,\n  DATE_MASK,\n  maskConfig,\n  PHONE_MASK,\n  PLATE_MASK,\n  TIME_MASK,\n} from './Masks';\n\nimport { GetEndAdornment, labelClass, outlinedInputClass } from './styleUtils';\n\nconst TextMaskCustom = props => {\n  const { inputRef, mask, ...other } = props;\n  let inputMask;\n  let pipeFunc;\n\n  if (!mask) {\n    return null;\n  }\n\n  if (typeof mask === 'string') {\n    switch (mask) {\n      case 'cep':\n        inputMask = CEP_MASK;\n        break;\n      case 'phone':\n        inputMask = PHONE_MASK;\n        break;\n      case 'cell':\n        inputMask = CELL_MASK;\n        break;\n      case 'cpf':\n        inputMask = CPF_MASK;\n        break;\n      case 'currency':\n        inputMask = CURRENCY_MASK;\n        break;\n      case 'cnpj':\n        inputMask = CNPJ_MASK;\n        break;\n      case 'plate':\n        inputMask = PLATE_MASK;\n        pipeFunc = conformedValue => conformedValue.toUpperCase();\n        break;\n      case 'cellphone':\n        inputMask = CELL_PHONE_MASK;\n        break;\n      case 'cpfcnpj':\n        inputMask = CPF_CNPJ_MASK;\n        break;\n      case 'date':\n        inputMask = DATE_MASK;\n        break;\n      case 'time':\n        inputMask = TIME_MASK;\n        break;\n      default:\n        return null;\n    }\n  } else {\n    inputMask = mask;\n  }\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={ref => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={inputMask}\n      pipe={pipeFunc}\n      showMask\n      {...maskConfig}\n    />\n  );\n};\n\nexport const TextFieldComponent = ({\n  classes,\n  key,\n  label,\n  onChange,\n  value,\n  name,\n  warning,\n  error,\n  success,\n  disabled,\n  mask,\n  shrinkLabel,\n  placeholder,\n  endAdornment,\n  endAdornmentMargin = true,\n  startAdornment,\n  ...input\n}) => (\n  <TextField\n    disabled={disabled}\n    id=\"outlined-name\"\n    name={name}\n    placeholder={placeholder || label}\n    label={label}\n    onChange={onChange}\n    InputLabelProps={{\n      classes: {\n        root: classNames(classes[labelClass({ warning, error, success })]),\n        focused: classes.cssFocused,\n      },\n      shrink: shrinkLabel,\n    }}\n    InputProps={{\n      inputComponent: mask ? TextMaskCustom : undefined,\n      inputProps: {\n        mask,\n      },\n      className: classes.input,\n      classes: {\n        root: classNames(\n          classes[outlinedInputClass({ warning, error, success })],\n          classes.inputRoot\n        ),\n        focused: classes.cssFocused,\n        notchedOutline: classes.notchedOutline,\n        inputAdornedStart: classes.adornedMarginLeft,\n        inputAdornedEnd: classes.adornedMarginRight,\n        adornedEnd: classes.adornedMarginEnd,\n      },\n      startAdornment,\n      endAdornment: (\n        <GetEndAdornment\n          warning={warning}\n          error={error}\n          success={success}\n          endAdornmentMargin={endAdornmentMargin}\n          endAdornment={endAdornment}\n        />\n      ),\n    }}\n    margin=\"dense\"\n    value={value}\n    error={!!error}\n    variant=\"outlined\"\n    {...input}\n  />\n);\n\nconst InputUI = withStyles(inputStyles)(\n  ({\n    classes,\n    key,\n    fullWidth = false,\n    label,\n    onChange,\n    value,\n    name,\n    warning,\n    error,\n    success,\n    disabled,\n    placeholder,\n    mask,\n    helperText,\n    endAdornment,\n    startAdornment,\n    ...input\n  }) => (\n    <TextFieldComponent\n      key={key}\n      error={!!error}\n      helperText={error || helperText}\n      fullWidth={fullWidth}\n      classes={classes}\n      label={label}\n      placeholder={placeholder}\n      onChange={onChange}\n      value={value}\n      name={name}\n      warning={warning}\n      success={success}\n      disabled={disabled}\n      mask={mask}\n      endAdornment={endAdornment}\n      startAdornment={startAdornment}\n      {...input}\n    />\n  )\n);\nexport const Input = props => <InputUI {...props} />;\n\nInput.defaultProps = {\n  fullWidth: false,\n  success: false,\n  warning: false,\n  disabled: false,\n  label: null,\n  onChange: null,\n  error: undefined,\n  mask: null,\n  shrinkLabel: undefined,\n  placeholder: null,\n  helperText: null,\n  endAdornment: null,\n  endAdornmentMargin: true,\n  startAdornment: null,\n};\n\nconst maskProp = PropTypes.oneOfType([\n  PropTypes.oneOf([\n    'cep',\n    'phone',\n    'cel',\n    'cpf',\n    'currency',\n    'cnpj',\n    'plate',\n    'cellphone',\n    'cpfcnpj',\n    'date',\n    'time',\n  ]),\n  PropTypes.array,\n  PropTypes.func,\n  PropTypes.bool,\n  PropTypes.shape({\n    mask: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\n    pipe: PropTypes.func,\n  }),\n]);\n\nInput.propTypes = {\n  fullWidth: PropTypes.bool,\n  disabled: PropTypes.bool,\n  success: PropTypes.bool,\n  warning: PropTypes.bool,\n  error: PropTypes.bool,\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  mask: maskProp,\n  shrinkLabel: PropTypes.bool,\n  placeholder: PropTypes.string,\n  helperText: PropTypes.string,\n  endAdornment: PropTypes.object,\n  endAdornmentMargin: PropTypes.bool,\n  startAdornment: PropTypes.object,\n};\n\nexport default Input;\n","import {\n  defaultGreen,\n  defaultGreenDarker,\n  defaultOrange,\n  defaultOrangeDarker,\n  defaultRed,\n  defaultRedDarker,\n} from '../colors';\n\nexport const stylesError = {\n  cssOutlinedInputRed: {\n    '&$cssFocused $notchedOutline': {\n      borderColor: defaultRed,\n    },\n    '&:hover:not($disabled):not($focused):not($error) $notchedOutline': {\n      borderColor: `${defaultRedDarker} !important`,\n    },\n  },\n  cssLabelRed: {\n    '&$cssFocused': {\n      color: defaultRed,\n    },\n  },\n};\nexport const stylesSuccess = {\n  cssOutlinedInputSuccess: {\n    '& $notchedOutline': {\n      borderColor: defaultGreen,\n    },\n    '&$cssFocused $notchedOutline': {\n      borderColor: defaultGreen,\n    },\n    '&:hover:not($disabled):not($focused):not($error) $notchedOutline': {\n      borderColor: `${defaultGreenDarker} !important`,\n    },\n  },\n  cssLabelSuccess: {\n    '&$cssFocused': {\n      color: defaultGreen,\n    },\n    color: defaultGreen,\n  },\n};\nexport const stylesWarning = {\n  cssOutlinedInputWarning: {\n    '& $notchedOutline': {\n      borderColor: defaultOrange,\n    },\n    '&$cssFocused $notchedOutline': {\n      borderColor: defaultOrange,\n    },\n    '&:hover:not($disabled):not($focused):not($error) $notchedOutline': {\n      borderColor: `${defaultOrangeDarker} !important`,\n    },\n  },\n  cssLabelWarning: {\n    '&$cssFocused': {\n      color: defaultOrange,\n    },\n    color: defaultOrange,\n  },\n};\n\nexport const inputStyles = theme => ({\n  adornedMarginLeft: {\n    marginLeft: theme.spacing.unit / 2,\n  },\n  adornedMarginRight: {\n    marginRight: theme.spacing.unit / 2,\n  },\n  adornedMarginEnd: {\n    paddingRight: `0px !important`,\n  },\n  inputRoot: {\n    paddingRight: theme.spacing.unit / 3,\n  },\n  cssOutlinedInput: {\n    '&$cssFocused $notchedOutline': {\n      borderColor: theme.palette.secondary.main,\n    },\n  },\n  cssLabel: {\n    '&$cssFocused': {\n      color: theme.palette.secondary.main,\n    },\n  },\n  ...stylesError,\n  ...stylesSuccess,\n  ...stylesWarning,\n  notchedOutline: {},\n  cssFocused: {},\n});\n","import createNumberMask from 'text-mask-addons/dist/createNumberMask';\nimport { conformToMask as coreConformToMask } from 'text-mask-core/dist/textMaskCore';\n\nexport const CEP_MASK = [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/];\n\nexport function conformToMask(text, mask) {\n  const result = coreConformToMask(text, mask, maskConfig);\n  return result.conformedValue;\n}\nexport const maskConfig = {\n  guide: false,\n  placeholderChar: '\\u2000',\n};\nexport const PHONE_MASK = [\n  '(',\n  /[1-9]/,\n  /\\d/,\n  ')',\n  ' ',\n  /[1-9]/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '-',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n];\n\nexport const CELL_MASK = [\n  '(',\n  /[1-9]/,\n  /\\d/,\n  ')',\n  ' ',\n  /[1-9]/,\n  /[1-9]/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '-',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n];\n\nexport const CPF_MASK = [\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '.',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '.',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '-',\n  /\\d/,\n  /\\d/,\n];\n\nexport const CNPJ_MASK = [\n  /\\d/,\n  /\\d/,\n  '.',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '.',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '/',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '-',\n  /\\d/,\n  /\\d/,\n];\n\nexport const PLATE_MERCO_MASK = [\n  /[A-Z]/i,\n  /[A-Z]/i,\n  /[A-Z]/i,\n  /\\d/,\n  /[A-Z]/i,\n  /\\d/,\n  /\\d/,\n];\n\nexport const PLATE_OLD_MASK = [\n  /[A-Z]/i,\n  /[A-Z]/i,\n  /[A-Z]/i,\n  '-',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n];\n\nexport const PLATE_MASK_DEF = [/[A-Z]/i, /[A-Z]/i, /[A-Z]/i, /\\d/, /[0-9A-Z]/];\n\nexport const PLATE_MASK = rawValue => {\n  if (rawValue.length <= 4) {\n    return PLATE_MASK_DEF;\n  }\n\n  // Check if it is a old plate\n  const fth = rawValue.charAt(3);\n  if (fth === '-' || (rawValue.charAt(4) >= '0' && rawValue.charAt(4) <= '9')) {\n    // Check if the a old plate should become a merco plate\n    const sth = rawValue.length >= 6 ? rawValue.charAt(5) : null;\n    if (sth != null && fth === '-' && sth.toLowerCase() !== sth.toUpperCase()) {\n      // go back to merco plate\n      return PLATE_MERCO_MASK;\n    }\n\n    return PLATE_OLD_MASK;\n  }\n\n  return PLATE_MERCO_MASK;\n};\n\nexport const DATE_MASK = [\n  /\\d/,\n  /\\d/,\n  '/',\n  /\\d/,\n  /\\d/,\n  '/',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n];\n\nexport const TIME_MASK_1 = [\n  /[0-2]/,\n  /\\d/,\n  ':',\n  /[0-5]/,\n  /\\d/,\n  ':',\n  /[0-5]/,\n  /\\d/,\n];\nexport const TIME_MASK_2 = [\n  /[0-2]/,\n  /[0-3]/,\n  ':',\n  /[0-5]/,\n  /\\d/,\n  ':',\n  /[0-5]/,\n  /\\d/,\n];\n\nexport const TIME_MASK = rawValue => {\n  if (rawValue.charAt(0) === '2') {\n    return TIME_MASK_2;\n  }\n  return TIME_MASK_1;\n};\n\nexport const CURRENCY_MASK = createNumberMask({\n  prefix: 'R$ ',\n  suffix: '',\n  thousandsSeparatorSymbol: '.',\n  decimalSymbol: ',',\n  allowDecimal: true,\n});\n\nexport const CELL_PHONE_MASK = rawValue => {\n  if (rawValue.length > 14) {\n    return CELL_MASK;\n  }\n  return PHONE_MASK;\n};\n\nexport const CPF_CNPJ_MASK = rawValue => {\n  if (rawValue.length > 14) {\n    return CNPJ_MASK;\n  }\n  return CPF_MASK;\n};\n","import { grey } from '@material-ui/core/colors';\n\nexport const defaultGreen = '#4caf50';\nexport const defaultGreenDarker = '#448744';\nexport const defaultRed = '#e6433f';\nexport const defaultRedDarker = '#af423e';\nexport const defaultOrange = '#ff9d0d';\nexport const defaultOrangeDarker = '#cd6e0d';\nexport const defaultGrey = grey[700];\nexport const defaultGreyLight = grey[500];\nexport const defaultGreyLight2 = grey[600];\nexport const defaultGreyLight3 = '#f7f7f7';\nexport const defaultGreyLight200 = grey[200];\nexport const defaultGreyDisabled = grey[400];\n"],"sourceRoot":""}