{"version":3,"sources":["/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/EditText/EditText.js","/dados_ext4/TecSinapse-Proj/react-prs/ui-kit/src/EditText/EditText.mdx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_tinymce_tinymce_react__WEBPACK_IMPORTED_MODULE_8__","_material_ui_styles__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_FormHelperText__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_FormHelperText__WEBPACK_IMPORTED_MODULE_10___default","useStyle","makeStyles","theme","root","width","height","editorError","borderColor","borderWidth","borderStyle","EditText","_ref","onChange","initialValue","uploadURL","disabled","error","name","language","showMenu","uploadFunc","hasImage","skinUrl","classes","a","createElement","className","init","plugins","toolbar","paste_data_images","images_upload_url","automatic_uploads","skin_url","menubar","images_upload_handler","textareaName","defaultProps","undefined","layoutProps","MDXLayout","MDXContent","components","props","Object","_dados_ext4_TecSinapse_Proj_react_prs_ui_kit_node_modules_docz_core_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","docz__WEBPACK_IMPORTED_MODULE_4__","of","parentName","_EditText__WEBPACK_IMPORTED_MODULE_3__","isMDXComponent"],"mappings":"mHAAA,IAAAA,EAAAC,EAAA,iCAAAC,EAAAD,EAAAE,EAAAH,GAAAI,GAAAH,EAAA,qCAAAA,EAAA,iDAAAA,EAAA,iDAAAA,EAAA,gDAAAA,EAAA,gDAAAA,EAAA,iDAAAA,EAAA,8CAAAA,EAAA,sEAAAI,EAAAJ,EAAA,kDAAAK,EAAAL,EAAA,4DAAAM,EAAAN,EAAAE,EAAAG,GAaME,EAAWC,YAAW,SAAAC,GAAK,MAAK,CACpCC,KAAM,CACJC,MAAO,OACPC,OAAQ,QAEVC,YAAa,CACXC,YAAa,MACbC,YAAa,MACbC,YAAa,YAIJC,EAAW,SAAAC,GAYlB,IAXJC,EAWID,EAXJC,SACAC,EAUIF,EAVJE,aACAC,EASIH,EATJG,UACAC,EAQIJ,EARJI,SACAC,EAOIL,EAPJK,MACAC,EAMIN,EANJM,KACAC,EAKIP,EALJO,SACAC,EAIIR,EAJJQ,SACAC,EAGIT,EAHJS,WACAC,EAEIV,EAFJU,SACAC,EACIX,EADJW,QAEMC,EAAUvB,IAEhB,OACEN,EAAA8B,EAAAC,cAAA,OAAKC,UAAWH,EAAQpB,MACtBT,EAAA8B,EAAAC,cAAA,OAAKC,UAAWV,EAAQO,EAAQjB,YAAc,MAC5CZ,EAAA8B,EAAAC,cAAC7B,EAAA,EAAD,CACEmB,SAAUA,EACVF,aAAcA,EACdc,KAAM,CACJC,QAASP,EAAW,wBAA0B,kBAC9CQ,QAASR,EACL,oFACA,4EACJS,kBAAmBT,EACnBU,kBAAmBjB,EACnBkB,mBAAmB,EACnBC,SAAUX,GAAW,IACrBJ,SAAuB,OAAbA,EAAoB,QAAUA,EACxCgB,QAASf,EACTgB,sBAAuBf,GAEzBR,SAAUA,EACVwB,aAAcnB,KAGjBD,GAAStB,EAAA8B,EAAAC,cAAC1B,EAAAyB,EAAD,CAAgBR,OAAK,GAAEA,iLAKvCN,EAAS2B,aAAe,CACtBzB,SAAU,KACVC,aAAc,GACdC,eAAWwB,EACXvB,UAAU,EACVC,MAAO,GACPE,SAAU,KACVC,UAAU,EACVC,gBAAYkB,EACZjB,UAAU,EACVC,QAAS,IAeIZ,+kBCjFT6B,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT9B,GAGZ,IAFD+B,EAEC/B,EAFD+B,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAjC,EAAA,gBACD,OAAOiC,OAAAE,EAAA,EAAAF,CAACJ,EAADI,OAAAG,OAAA,GAAeR,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAE5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,YADR,YAGAL,OAAAE,EAAA,EAAAF,CAACM,EAAA,WAAD,CAAYC,GAAIzC,IAAUsC,QAAQ,eAClCJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,eADR,eAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,sGADR,8CAEkDL,OAAAE,EAAA,EAAAF,CAAA,cAAYQ,WAAW,MAAvB,uEAClDR,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,6GADR,2BAE+BL,OAAAE,EAAA,EAAAF,CAAA,cAAYQ,WAAW,MAAvB,UAF/B,sFAGAR,OAAAE,EAAA,EAAAF,CAACS,EAAA,EAAD,CAAUL,QAAQ,6LAItBP,EAAWa,gBAAiB","file":"static/js/src-edit-text-edit-text.830c95b3.js","sourcesContent":["import React from 'react';\nimport 'tinymce/tinymce';\nimport 'tinymce/themes/silver/theme';\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/link';\nimport 'tinymce/plugins/code';\nimport 'tinymce/plugins/image';\nimport 'tinymce-i18n/langs/pt_BR';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { makeStyles } from '@material-ui/styles';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport PropTypes from 'prop-types';\n\nconst useStyle = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n  },\n  editorError: {\n    borderColor: 'red',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n  },\n}));\n\nexport const EditText = ({\n  onChange,\n  initialValue,\n  uploadURL,\n  disabled,\n  error,\n  name,\n  language,\n  showMenu,\n  uploadFunc,\n  hasImage,\n  skinUrl,\n}) => {\n  const classes = useStyle();\n\n  return (\n    <div className={classes.root}>\n      <div className={error ? classes.editorError : null}>\n        <Editor\n          disabled={disabled}\n          initialValue={initialValue}\n          init={{\n            plugins: hasImage ? 'link image code paste' : 'link code paste',\n            toolbar: hasImage\n              ? 'paste | undo redo | bold italic | alignleft aligncenter alignright | code | image'\n              : 'paste | undo redo | bold italic | alignleft aligncenter alignright | code',\n            paste_data_images: hasImage,\n            images_upload_url: uploadURL,\n            automatic_uploads: true,\n            skin_url: skinUrl || '/',\n            language: language === 'pt' ? 'pt_BR' : language,\n            menubar: showMenu,\n            images_upload_handler: uploadFunc,\n          }}\n          onChange={onChange}\n          textareaName={name}\n        />\n      </div>\n      {error && <FormHelperText error>{error}</FormHelperText>}\n    </div>\n  );\n};\n\nEditText.defaultProps = {\n  onChange: null,\n  initialValue: '',\n  uploadURL: undefined,\n  disabled: false,\n  error: '',\n  language: 'pt',\n  showMenu: false,\n  uploadFunc: undefined,\n  hasImage: true,\n  skinUrl: '',\n};\n\nEditText.propTypes = {\n  onChange: PropTypes.func,\n  initialValue: PropTypes.string,\n  uploadURL: PropTypes.string,\n  disabled: PropTypes.bool,\n  error: PropTypes.string,\n  language: PropTypes.oneOf(['pt', 'en', 'es']),\n  showMenu: PropTypes.bool,\n  uploadFunc: PropTypes.func,\n  hasImage: PropTypes.bool,\n  skinUrl: PropTypes.string,\n};\nexport default EditText;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport EditText from './EditText';\nimport { Playground, PropsTable } from 'docz';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"edittext\"\n    }}>{`EditText`}</h1>\n    <PropsTable of={EditText} mdxType=\"PropsTable\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <h3 {...{\n      \"id\": \"the-component-requires-that-the-files-from-httpsgithubcomtinymcetinymce-disttreemasterskinsuioxide\"\n    }}>{`The component requires that the files from `}<inlineCode parentName=\"h3\">{`https://github.com/tinymce/tinymce-dist/tree/master/skins/ui/oxide`}</inlineCode></h3>\n    <h3 {...{\n      \"id\": \"should-be-copied-to-the-public-folder-and-passed-as-a-prop-to-skinurl-start-as--meaning-the-public-folder\"\n    }}>{`should be copied to the `}<inlineCode parentName=\"h3\">{`public`}</inlineCode>{` folder and passed as a prop to 'skinUrl' (start as '/' meaning the public folder)`}</h3>\n    <EditText mdxType=\"EditText\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}